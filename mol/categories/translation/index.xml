<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Translation on MOL</title>
    <link>http://localhost:1313/mol/categories/translation/</link>
    <description>Recent content in Translation on MOL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <lastBuildDate>Wed, 07 Jan 2015 00:00:00 UTC</lastBuildDate>
    <atom:link href="http://localhost:1313/mol/categories/translation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>【翻訳】移民は安価な労働力のためではなく優秀な人材の確保のため</title>
      <link>http://localhost:1313/mol/log/immigration-is-about-talent-not-costs/</link>
      <pubDate>Wed, 07 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/immigration-is-about-talent-not-costs/</guid>
      <description>

&lt;p&gt;&lt;cite class=&#34;citation&#34;&gt;
&lt;img src=&#34;/mol/images/people/yuri_sagalov.jpg&#34; alt=&#34;Yuri Sagalov&#34; /&gt;

原文：&lt;a href=&#34;https://www.aerofs.com/blog/immigration-is-about-talent-not-costs/&#34;&gt;Immigration is about talent, not costs&lt;/a&gt;（&lt;time&gt;2014-12-02&lt;/time&gt;）by &lt;a href=&#34;https://twitter.com/yuris&#34;&gt;Yuri Sagalov&lt;/a&gt;
&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;先週、BusinessWeekは『&lt;a href=&#34;http://www.businessweek.com/articles/2014-11-24/the-tech-worker-shortage-doesnt-really-exist&#34;&gt;テックワーカー不足問題は本当は存在しない&lt;/a&gt;』という記事を出した。FacebookやMicrosoftのような企業は実際のところ低賃金労働者を探しているだけだと、テックワーカー不足問題に異論を唱える識者に彼らはインタビューをしていた。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;一般的な認識として、人手不足である証拠はまったくもってない、とラトガース大学で公共政策の教鞭をとっているHal Salzman教授は語っている。彼らは自分たちが提示するサラリーでの働いてくれる労働者を見つけることが出来ないだけかもしれない。しかし、私が半額のテレビを見つけられないと同じようにそれが人手不足として認められるとは思わない。&lt;br /&gt;
    …&lt;br /&gt;
    FacebookとMicrosoftは低賃金労働者を多く雇いたいだけという事実に私たちは異論はないと、Salzman氏と共同著者であるDaniel Kuehn氏は答える。またUrban Instituteの助教授の調査によると『しかし、それは人手不足とはみなされない』&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ほんの数時間後、Voxは『&lt;a href=&#34;http://www.vox.com/xpress/2014/11/24/7275635/tech-intern-salary&#34;&gt;テック企業のインターンはあなたよりも稼ぐ？&lt;/a&gt;』という記事を出した。彼らはあけっぴろげにいくつかのIT企業の給料をツイートしていた。なかには高額のもあったし、思ったほどでもないものある。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/mol/images/2015/0107-01.png&#34; alt=&#34;Tiffany Zhong&#34; /&gt;
  Friend made a list of top internship offers ― &lt;a href=&#34;https://twitter.com/tzhongg/status/536565474041937921/photo/1&#34;&gt;Tiffany Zhong on Twitter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;低賃金労働者論争の話はここでおしまいだ。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;コスト削減でなく優秀な人材確保のために雇う:80474b08e1ff759fe190920219269304&#34;&gt;コスト削減でなく優秀な人材確保のために雇う&lt;/h2&gt;

&lt;p&gt;私はアメリカで事業を始めるために引っ越してきた創業者のひとりである。長い間、移民政策について特に関心はなかったが、最近の出来事がそれについてもう一度考えるときが来たようだ。このタイミングで私の考えを共有することが適切かと思う。&lt;/p&gt;

&lt;p&gt;私は共同創業者とAeroFSをスタートさせるためにカナダからアメリカ合衆国に来た。私たちはベンチャーキャピタルをたて、従業員を雇用し（現地採用・外国人採用両方）、ここカリファルニアである程度の成功を手に入れた。&lt;/p&gt;

&lt;p&gt;AeroFS設立時、H1-B（特殊技能職：プログラマー等が該当する）ビザの上限数は問題ではなかった。一般的に、H1-Bの申請期間は毎年4月から始まり10月までエントリーできる。2010年に私が申請したとき、ちょうど10月にその年のビザを申請したが、12月には申請が受理され、無事に2011年初頭から米国で働けるようになった。&lt;/p&gt;

&lt;p&gt;数年後、私たちは外国人と現地人を雇用した。もちろんその目的は良い人材を獲得するためであり、上記で述べられているような安い労働力という観点は一切なかった。事実、H-1Bビザの制限により高度な技術を持った人材はアメリカ政府によって労働者を雇う州の賃金相場に基づいて厳格に賃金が決められるので、先のトピック自体意味のないものとなる。&lt;/p&gt;

&lt;p&gt;いくつかの理由によって、大抵の場合、外国人労働者の採用には多くのコストがかかる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;面接のための交通費や宿泊費&lt;/li&gt;
&lt;li&gt;移民手続きにかかる費用（最高$8000の法的手続き費用）&lt;/li&gt;
&lt;li&gt;引越し費用の補助（運搬コスト、赴任手当等）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;つまり、現地採用したほうがコストは低く抑えられて好ましいと考えるかもしれないが、すべてのエンジニアは全員同じ能力なわけがあるはずはないし、優秀なエンジニアは世界的に見ても少ない。したがって、外国で優秀なエンジニアを見つけた場合、なんとしても彼らにオファーを出し、雇うよう努めなければならない。&lt;/p&gt;

&lt;p&gt;しかしながら不幸にもこれらは昨年から変わった。私たちは、まずH-1Bの定員について確認しなければならない。&lt;/p&gt;

&lt;h2 id=&#34;h-1bビザの定員数の推移:80474b08e1ff759fe190920219269304&#34;&gt;H-1Bビザの定員数の推移&lt;/h2&gt;

&lt;p&gt;H-1Bビザの定員65,000人は、1990年の議会で移民法の一部として導入され、翌年度の1992年度(1991年10月1日)より施行。最初の5年間は定員に達しなかったが1997年度に初めて定員に達し翌1998年度もITブームの影響で定員を達した。&lt;/p&gt;

&lt;p&gt;移民需要の高まりにより、アメリカ政府は米国の競争力及び労働力改善法（ACWIA）を1998年に承認した。これにより1999年度と2000年度のH-1Bビザの定員は115,000人まで一時的に拡大された。&lt;/p&gt;

&lt;p&gt;2番目の法、21世紀における米国の競争力法（AC21）は2000年に承認され、H-1Bビザの定員は195,000人まで2001年度から2003年度まで引き上げられた。&lt;/p&gt;

&lt;p&gt;この一時的な増加は2004年度までで、それ以降は195,000人から、また65,000人に戻った。&lt;/p&gt;

&lt;h2 id=&#34;私たちがしなければいけなかったこと:80474b08e1ff759fe190920219269304&#34;&gt;私たちがしなければいけなかったこと&lt;/h2&gt;

&lt;p&gt;アメリカ経済が回復するにつれて、私たちは候補者のためにH-1Bビザを獲得するのはコイン投げのようなものだと理解した。2013年において、政府が申請受け入れをストップするまでに65,000人の定員に対して124,000人の申請があった。それも4月が始まって、たったの5日間でだ。2014年は65,000人の定員に対して172,000人の申請があった。申請にあたっての時間的コストや候補者をリクルーティングする労力を考えてみて欲しい。そのようなコストを支払っても、いざ彼らを雇うときに私たちには、なにもできることがないのだ。&lt;/p&gt;

&lt;p&gt;あるケースにおいて、私たちはこの宝くじに外れた。私たちのH1-Bの申請書は封も明けられないまま返却され、残ったのは私たちが必要としている分野で素晴らしいエキスパートである候補者だけである。しかし彼は合法的に私たちの会社では働けない。&lt;/p&gt;

&lt;p&gt;私たちはこの候補者を犠牲にはしたくなかったので代替手段を模索し始めた。O-1（科学、芸術、教育、ビジネス、またはスポーツの分野で「卓越した能力を有する者」に発給される）ビザは彼に適用できるだろうか、いや資格を満たしていない。&lt;a href=&#34;http://japanese.japan.usembassy.gov/j/visa/tvisaj-ivcategories.html#dv&#34;&gt;グリーンカード抽選&lt;/a&gt;は？当てにならない。他に使えそうなビザはないだろうか？悲しきことにない。彼はフランス人だ。そのため、カナダ人専用のTNビザ、オーストラリア人専用のE3ビザも該当しない。&lt;/p&gt;

&lt;p&gt;最終的に、新しい支社を違う国で立ち上げ、そこで候補者を雇い入れるしか方法がないことを理解した。&lt;/p&gt;

&lt;p&gt;それが私たちがやったことである。新しい従業員とのコミュニケーションのために、出来る限りアメリカから近いカナダに子会社を設立した。彼が最初の社員になるが、たぶん、最初で最後とはならないだろう。&lt;/p&gt;

&lt;p&gt;これまで私たちは会社を運営してきて、コスト削減のために採用に関する決定がおこなわれたことはない。私たちが誰かを雇用しなければならないとき、私たちは採用する。なぜなら、彼らがどこの国の出身であろうが、私たちが求めるスキルを持って面接に臨んでいるからだ。&lt;/p&gt;

&lt;p&gt;プロフェッショナルな外国人労働者がアメリカで働けないことは、単純に彼らが私たちの国の代わりに他の国で貢献することを意味する。&lt;/p&gt;

&lt;p&gt;テックタレントの獲得競争は現実に今まさに起きているのである。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=8687804&#34;&gt;Hacker Newsで議論する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;カナダ人でベイエリアで&lt;a href=&#34;https://www.aerofs.com/&#34;&gt;AeroFS&lt;/a&gt;という会社を経営している&lt;a href=&#34;https://twitter.com/yuris&#34;&gt;Yuri Sagalov&lt;/a&gt;氏の記事。翻訳にあたっては&lt;a href=&#34;https://twitter.com/yuris/status/551865534888038403&#34;&gt;氏の同意を得ている&lt;/a&gt;。Hacker Newsのスレッドを見てもらえれば分かるが、結構盛り上がってたので翻訳してみた。&lt;/p&gt;

&lt;p&gt;アメリカで働くことは非常に難しいとは聞いていたが、やっぱり、そのようだ。&lt;a href=&#34;http://chikawatanabe.com/2010/03/09/visa-2/&#34;&gt;アメリカの就労ビザが欲しければ留学せよ&lt;/a&gt;との記事を見たことはあるが、そんな金持ってない。&lt;/p&gt;

&lt;p&gt;記事で代替案と提示してある方法として&lt;a href=&#34;http://www.cbc.ca/news/canada/british-columbia/silicon-valley-north-vancouver-tech-surges-as-u-s-immigration-reform-idles-1.2732667&#34;&gt;Facebookもそのような事をしている&lt;/a&gt;。そう考えると、ベストなのは北のシリコンバレーであるバンクーバーなのであろう。アメリカほどではないにしろ、カナダでの就労ビザ獲得も難しい。基本的に外国人がその国で働くことは自国民の失業率を高める可能性があるからだ。だから、1年でもほぼ無条件で働けるワーキングホリデーのビザはすごく重要だ。&lt;/p&gt;

&lt;p&gt;今のところ、アメリカに本社があるカナダの会社でワーホリ採用、カナダ就労ビザ取得、カナダで働きつつ数年スパンで本社転籍を試みるってのが金無し・学無し・コネ無しの自分が取り得る現実解なのだろうと考えている。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【翻訳】デザインエンジニアリング</title>
      <link>http://localhost:1313/mol/log/design-engineering/</link>
      <pubDate>Mon, 05 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/design-engineering/</guid>
      <description>

&lt;p&gt;&lt;cite class=&#34;citation&#34;&gt;
&lt;img src=&#34;/mol/images/people/jonathan_snook.jpg&#34; alt=&#34;Jonathan Snook&#34; /&gt;

原文：&lt;a href=&#34;http://snook.ca/archives/opinion/design-engineering&#34;&gt;Design Engineering&lt;/a&gt;（&lt;time&gt;2014-11-25&lt;/time&gt;）by &lt;a href=&#34;http://snook.ca/about/&#34;&gt;Jonathan Snook&lt;/a&gt;
&lt;/cite&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JavaScriptだけがフロントエンド開発ではない。それはデザインとディベロップメントの技術が人種のるつぼのように融合したものである。それはアクセシブルなUIを実装するためであり、Web標準を受け入れるものである。  — &lt;a href=&#34;https://twitter.com/matthillco/status/480986847473303552&#34;&gt;Matt Hill&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shopify Adminの開発に関して言えば、最近まで2つの専門職、つまりデザイナーとエンジニアを受け入れていた。今では3つめの専門職がある、しかしながらそれが確かなものとして認識されるまで時間がかかった、フロントエンドデベロッパーである。フロントエンドデベロッパーのスキルはデザインとエンジニアリング両方にまたがっている。これまでクオリティの高いフロントエンドコードをフロントエンドデベロッパーの助けもなしに書けるデザイナーを雇えて、私たちは非常にラッキーだった。&lt;/p&gt;

&lt;p&gt;フロントエンドデベロッパーの精鋭チームの作り方に関してはいくつかの異論がある。『もし彼らがデベロッパーであるのなら、彼らはエンジニアチームに所属しているだろう。』つまり逆を言えば、バックエンドデベロッパーはフロントエンドデベロッパーでもあるということだ。Shopifyは彼らデベロッパーに対してフルスタックであることを期待している。しかし、フロントエンド開発がディベロップメントであるのなら、なぜ私たちはデザイナーにもそれを求めないのか？&lt;/p&gt;

&lt;p&gt;私たちは&lt;strong&gt;フロントエンド開発&lt;/strong&gt;と&lt;strong&gt;バックエンド開発&lt;/strong&gt;という用語を使うが、フロントエンドデベロッパーが開発に着手する段階とバックエンドデベロッパーが開発を終える段階を多くの人がよく勘違いしていることが問題だ。&lt;/p&gt;

&lt;p&gt;開発プロセスを考えてみれば、そこには3つの段階、デザイン（Design）、デザイン実装（Design Implementation）、アプリケーション開発（Application Development）が存在する。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/mol/images/2015/0105-01.png&#34; alt=&#34;Spectrum of Application Development&#34; /&gt;
&lt;/p&gt;

&lt;h2 id=&#34;デザイン:8bae76518ef0701d7565ee2efe8062b1&#34;&gt;デザイン&lt;/h2&gt;

&lt;p&gt;デザイナーは多くのツールを使い、彼らはデザインがどのように実装されているか理解すべきだが、HTML/CSS、JavaScriptを使って彼ら自身のデザインを実装する必要はない（ちょうど印刷デザイナーに印刷を任せる必要がないのと同じようにだ。なぜなら私たちはプリンターを持っているから）。デザイナーが複数のデザインの試行錯誤に集中できる、もしくはデザイン的問題に本格的に取り組むことができることはアドバンテージであり、結果としてデザイン実装（デザインをプロダクト前段階のHTML/CSSに落としこむこと）に集中する必要性はない。&lt;/p&gt;

&lt;p&gt;デザイナーはコードの書き方を知るべきと私は強く信じているが、組織の拡大によっては専門性を高める必要もあると述べたい。&lt;/p&gt;

&lt;h2 id=&#34;アプリケーション開発:8bae76518ef0701d7565ee2efe8062b1&#34;&gt;アプリケーション開発&lt;/h2&gt;

&lt;p&gt;アプリケーション開発とはインターフェースとサービングをベストの方法で繋げることである。私たちはクライアントサイドMVCもしくはサーバーサイドレンダリングをどちらを使うべきか？キャッシュもしくはストレージシステムとは何か？データモデルとは何か？これらの問いはHTTPの境界線を超えた問題であり、どちらか片方の領域だけで考えるべきことではない。&lt;/p&gt;

&lt;p&gt;OOPとプロトタイプ継承を理解することは、複数ブラウザでのCSSプロパティのレンダリングと、多様な入力方法、マウス、キーボード、ジェスチャーまたはスクリーンリーダーにアクセシブルでありつつ、さまざまな携帯端末、タブレット、またはデスクトップでベストな実装の仕方を理解することとは違うスキルセットを必要とする。&lt;/p&gt;

&lt;h2 id=&#34;デザイン実装:8bae76518ef0701d7565ee2efe8062b1&#34;&gt;デザイン実装&lt;/h2&gt;

&lt;p&gt;デザインを実装することはHTML/CSSといくぶんかのJavaScriptを書くことを意味し、さまざまなデザイン上の制約、つまり異なるブラウザ、異なるサイズ、異なる解像度、異なるインタラクションの方法（マウス、キーボード、ジェスチャー、スクリーンリーダー）を克服しデザインを確かなものとすることである。またそれはUX検証のためにプロトタイプを作成することでもある。これらの領域を担当するものはデザイナーである必要はないが、デザイン思考を持っており、かつデベロッパーである必要はないが、テクニカル思考を持っている。&lt;/p&gt;

&lt;p&gt;この役割の人たちはデザインとエンジニアリングの間に立ち、見事な架け橋を作ってくれる。私はよくこの人たちのことを『デザインの調停者（arbiters of design）』と呼んでいる。彼らはそのデザインが実装可能かどうか、制約がどんなものか教えてくれたり、可能な限り多くのユーザーが使いやすいインターフェースと一貫性を構築するために手助けをしてくれる。彼らはビジュアルワークをコードに変換してくれる。彼らはデベロッパーのマインドセットであるレンダリングのパフォーマンスや、読み込み時間に関心があり、ハイパフォーマンスなフロントエンドを実装するためにエンジニアリングをもちいて解決してくれる。&lt;/p&gt;

&lt;h2 id=&#34;役割:8bae76518ef0701d7565ee2efe8062b1&#34;&gt;役割&lt;/h2&gt;

&lt;p&gt;これらの境界を超えて仕事ができるジェネラリストとそれぞれのセクションで専門性を発揮できるスペシャリスト両方を揃えることが重要である。ほんのすこし前まで、Shopify Admin内で、私たちはデザイン実装を担当する者の育成に力を入れてこなかった。この理由は、私たちがスペシャリストを超えたジェネラリストを求めているためであり、デザイナーはデザインに集中するべきとと考えているためだ。&lt;/p&gt;

&lt;h2 id=&#34;彼らをなんと呼べばいいのか:8bae76518ef0701d7565ee2efe8062b1&#34;&gt;彼らをなんと呼べばいいのか？&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;フロントエンドはデザインエンジニアリングと言い換えることができるか？  — &lt;a href=&#34;https://twitter.com/hereinthehive/status/481509193774792705&#34;&gt;Dan Donald&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;私たちはこの役割の人をなんと呼ぶべきか議論した。&lt;strong&gt;デザインインプリメンター（Design Implementors）&lt;/strong&gt;はあまりしっくりこない。&lt;strong&gt;デザインエンジニア（Design Engineers）&lt;/strong&gt;と呼ぼうと私たちはほぼ決めていたが、やはりそれではいささか『ディズニー』すぎるのだ。&lt;/p&gt;

&lt;p&gt;私たちは既にShopify.comを担当する優秀なフロントエンドデベロッパーチームをトロントとほかの進行中のプロジェクトに持っていた。彼らはどちらかと言うとバックエンド開発寄りだったため、私たちのそれとはすこしばかり違っていた。&lt;/p&gt;

&lt;p&gt;結局、私たちは&lt;strong&gt;フロントエンドデベロッパー（Front-End Developer）&lt;/strong&gt;に戻ってきた。&lt;/p&gt;

&lt;p&gt;彼らが担当する領域の端にも関わらず、それは一般的であり、すべてのフロントエンダーを内包する。&lt;/p&gt;

&lt;p&gt;産業として、私たちがこれまでほかのテクノロジーで見てきたように私たちは&lt;a href=&#34;https://github.com/micahgodbolt/front-end-architecture&#34;&gt;デザイン・コードの設計&lt;/a&gt;においてより専門性を高める方向にシフトしていく傾向があり、プロダクトをスケールし、大規模なコードベースと大人数でのサイト開発においての新しいワークフローを見守り続けている。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&#34;http://www.shopify.com/&#34;&gt;Shopify&lt;/a&gt;のWebデベロッパー・デザイナーであり、&lt;a href=&#34;https://smacss.com/ja&#34;&gt;SMACSS&lt;/a&gt;の提唱者でもあるJonathan Snook氏の記事。翻訳にあたっては氏の同意を得ている。&lt;/p&gt;

&lt;p&gt;個人的には自分の肩書に関してはあまり興味はないが、名前があやふやなものに対して世間一般の認知は得られない。どういったものかよくわからないものにはお金は回らない。かける労力に対して見合った見返りがなければ理不尽であろう。もしフロントエンド周りで仕事をしているのであれば、自分たちの職種を定義し主張することが存在価値を認めさせる一歩だと思う。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【翻訳】なぜシリコンバレーはコードの書けるデザイナーを求めているのか？</title>
      <link>http://localhost:1313/mol/log/why-valley-wants-designers-can-code/</link>
      <pubDate>Wed, 03 Aug 2011 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/why-valley-wants-designers-can-code/</guid>
      <description>&lt;p&gt;&lt;cite class=citation&gt;
&lt;img src=&#34;/mol/images/people/jared_spool.jpg&#34; alt=&#34;Jared Spool&#34; /&gt;

原文：&lt;a href=&#34;http://www.uie.com/brainsparks/2011/05/31/why-the-valley-wants-designers-that-can-code/&#34;&gt;Why The Valley Wants Designers That Can Code&lt;/a&gt;（&lt;time&gt;2011-05-31&lt;/time&gt;）by Jared Spool
&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;もし周りにデザイナーが大勢いるのなら、デザイナーがコードも書けることは価値のあることかどうか話題に挙げてみてください。すぐに、モーゼが紅海を2つに割ったよりも早くデザイナー達の意見は分かれるでしょう。片方はプログラミングは必要不可欠なスキルだと主張し、もう片方はプロミグラミングはデザイナーの価値を下げてしまうと猛烈に論じるでしょう。&lt;/p&gt;

&lt;p&gt;興味深いことに、プログラミングもできるデザイナーが価値があるかどうかはデザイナーの決めることではありません。それは採用マネージャーの仕事です。今日の雇用市場に基づけば、彼らがどの立場なのかは非常に明白です。多くの採用マネージャーは &lt;strong&gt;スーパーデザイナー&lt;/strong&gt; を求めています。スーパーデザイナーというのはもちろんプログラミングもできるデザイナーのことです。&lt;/p&gt;

&lt;p&gt;雇うべきスーパーデザイナーはそこら中にいる一方で、最近、シリコンバレーのスタートアップ企業から実際の需要が起きています。 AppleやMint.comのようなデザイン評価の高い成功事例に伴って、シリコンバレーの投資家や事業家はデザイナーの仕事に対して新しい理解を持つようになってきました。&lt;/p&gt;

&lt;p&gt;しかしながら、スタートアップ企業というのはできる限りムダのない経営を心がけているので、幅広いスキルを持ったタレントを探しています。シリコンバレーの住人の考えでは、もしデザインとプログラミング両方出来る人を雇うことができれば、最小限のリソースでコンセプトをプロダクトに落としこみリリースできると考えています。さもなければ、デザイナーとプログラマーの2人を雇わなければならません、もしくは誰もいなくてもやらなければなりません。&lt;/p&gt;

&lt;p&gt;私たちはここ数年間でデザイナーがいなくてもプロダクトをリリースできると証明してきました。多くの企業はこれと同じようなことをしてきましたが、リリースできたとしても素晴らしい成果をあげているとは言えません。しかしながら、プログラマーなしでプロダクトをリリースすることは不可能ではないかもしれませんが、難しいことでしょう。&lt;/p&gt;

&lt;p&gt;そうゆうわけで、プログラミングもできるデザイナーを見つけるために大金を支払うようなスタートアップ企業が数十は存在します。需要は多いですし、デザイナーでプログラミング経験者と証明できれば、プログラミングのできないデザイナーよりも給料は高くなります。&lt;/p&gt;

&lt;p&gt;スタートアップではない企業での需要はどうでしょうか？伝統的な大企業ではプログラマー、デザイナーを分けた大きなチームを簡単に作ることが可能です。&lt;/p&gt;

&lt;p&gt;しかしだからといって、コードの書けるデザイナーの価値がないというわけではありません。2人のスーパーデザイナーがいるチームでは、普通のデザイナー、プログラマーが1人づついるチームよりもフレキシブルで可能性を秘めています。フレキシブルなチームはより良いデザインされたプロダクトをより早く作ることができます&lt;/p&gt;

&lt;p&gt;プログラミングとデザインはスキルの集合です。私たちが学んだことは、役割によって分けられてない、うまくスキルが配分されたチームがより良い結果を生み出すということです。プログラミングもデザインもできる人材に恵まれたチームは、長期的に見ればスキルによって分けられたチームよりも効率的でしょう。&lt;/p&gt;

&lt;p&gt;もしあなたがデザイナーならプログラミングを学ばなくてもよいでしょう。しかし、学んで身につければ時が経つにつれてより多くのチャンスにめぐりあうことでしょう。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;次のポストではなぜデザイナーがコードを書けたほうが良いのか３つの理由を述べています。&lt;/p&gt;

&lt;p&gt;&lt;cite class=citation&gt;
&lt;img src=&#34;/mol/images/people/jared_spool.jpg&#34; alt=&#34;Jared Spool&#34; /&gt;

原文：&lt;a href=&#34;http://www.uie.com/brainsparks/2011/06/06/3-reasons-why-learning-to-code-makes-you-a-better-designer/&#34;&gt;3 Reasons Why Learning To Code Makes You A Better Designer&lt;/a&gt;（&lt;time&gt;2011-06-31&lt;/time&gt;）by Jared Spool
&lt;/cite&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt;
あなたが働いている領域の中間についてより深く理解できるでしょう。もし効率的なデータベース処理をできるクエリーが書ければ、トレードオフに必要な適切なレスポンス時間を設定できます。なにがコードを簡単にし、難しくするのか理解していれば、アイデアをより速く実装できるでしょう。（開発工数は限られているので工数削減以上のものが得られるかもしれません。）中間領域を知ることは事をうまく運び、 より考えられたデザインの決定をする上で役立つでしょう。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt;
プログラミングを理解することで、より良いプロトタイプ作ることができます。デザインアイデアをチームメイトやクライアントに伝えるための最適な方法は、動くプロトタイプを作ることです。素早くプロトタイプを作ることであなたのアイデアに命が吹き込まれ、内なる素晴らしいアイデアを解き放たれ、あなたのデザインの本当の意味を皆が理解するのに役立つでしょう。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt;
プログラミングを理解することで、製品コードのバグや欠陥を特定するのに役立つでしょう。チームメイトのデザイナーが活気づくにつれて、あなたはUIインタラクションの問題に取り掛かっているプログラマーを助ける重要な役割を担うことができるでしょう。つまりそれは、最終プロダクトがこれ以上無いほどの出来になるということです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;実際にコードを書かなくても、どのように動くのか理解してるだけでも全然効率は違うと思うし、話も進めやすいと思うYO（個人経験談）&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
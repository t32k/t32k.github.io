<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Analytics on MOL</title>
    <link>http://localhost:1313/mol/categories/analytics/</link>
    <description>Recent content in Analytics on MOL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
    
    <lastBuildDate>Mon, 15 Apr 2013 00:00:00 UTC</lastBuildDate>
    <atom:link href="http://localhost:1313/mol/categories/analytics/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>サイトの速度</title>
      <link>http://localhost:1313/mol/log/no-more-stopwatch/</link>
      <pubDate>Mon, 15 Apr 2013 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/no-more-stopwatch/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/wwarby/3296379139/&#34;&gt;Stopwatch | By wwarby Flickr!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;こんにちわ、あなたの&lt;a href=&#34;https://twitter.com/t32k&#34;&gt;@t32k&lt;/a&gt;、ごきげんいかがでしょう。みなさんはスマホWebアプリ作っていて、自分の作ったものは速いのか遅いのか気になりませんかね？僕は木に泣くりまくりすてぃです。&lt;/p&gt;

&lt;p&gt;そうゆうわけなもんで、表示速度とか計測してみようって話になるじゃないですかー、まさかストップウォッチで計測しないとは思うんですけどー、一応どのようにスピードを計測、そのアプリの性能を評価すればよいのか一緒に考えてみましょう。&lt;/p&gt;

&lt;p&gt;僕が昔、ゴメス・コンサルティング（現：&lt;del&gt;コンピュウェア&lt;/del&gt; モーニングスター） の&lt;a href=&#34;http://t32k.me/mol/log/gomez/&#34;&gt;セミナーに行ってきた時の話&lt;/a&gt;ですが、ここの会社はサイトパフォーマンスの計測サービスを提供していて、計測で重要なのは『&lt;strong&gt;定期的かつ継続的かつ同手法にてパフォーマンス測定&lt;/strong&gt;』と言っておられました。&lt;/p&gt;

&lt;p&gt;サービスリリース時はスモールスタートなのでアプリもコンパクトですからスピードは速めかもしれません。しかし月日がたつにつれて、多くの機能が実装され、それに伴いサイトのスピードが落ちてはなんの意味もありません。計測した日がたまたま速かったのかもしれませんし、たまたま遅かったのかもしれませんので、定期的かつ継続的にかつ計測する必要性があります。また、1回目と2回目の測定条件（環境）が違ったりしては参考になりません。ましてや数ms単位でしのぎを削る我々にとってこの辺はシビアでかつ正確であってほしいわけです。&lt;/p&gt;

&lt;p&gt;ですから、ストップウォッチや計測コードを毎回差し込むといった人間の手による対応ではコストが高すぎますし不正確な計測しか出来ません。そこですべてを自動化し計測する必要性があります。&lt;/p&gt;

&lt;h2 id=&#34;すべてを自動化ってそんなことできるの:5d553aa52a0d71ffe93812f3cbaa3ce3&#34;&gt;すべてを自動化ってそんなことできるの？&lt;/h2&gt;

&lt;p&gt;大抵のサイトに実装されているであろうGoogle アナリティクスを使えば可能です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/mol/file/2013/04/s11.png&#34; alt=&#34;&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;上記Google アナリティクスのレポートから『&lt;strong&gt;平均表示時間&lt;/strong&gt;』等を確認できます。『平均表示時間』と書いてありますが、英語メニューでは『Avg. Page Load Time』ですので、『平均読み込み時間』が適切かと思われます（ラベリングおかしい（●｀ε´●））
&lt;blockquote&gt;平均表示時間 - ページの読み込みにかかった平均時間（秒）&lt;/p&gt;

&lt;p&gt;ga:avgPageLoadTime = (ga:pageLoadTime / ga:pageLoadSample) * 0.001
平均表示時間（秒）= ページの読み込みの合算値 (ミリ秒）÷ サンプル数 × 0.001
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;https://developers.google.com/analytics/devguides/reporting/core/dimsmets/sitespeed&#34;&gt;Site Speed - Dimensions &amp;amp; Metrics Reference &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
と言った計算式で算出されております。これであればサイトの全ページを計測でき、なおかつ平均なので、ある程度ならした数値を得ることができます（外れ値は別途カスタムレポートとかで除外することもできます）し、パフォーマンス改善もPVの多いとこから対応したほうが効率的だということが理解できるでしょう。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&#34;color: #333399;&#34;&gt;[追記]&lt;/span&gt;&lt;/strong&gt;　コメントに指摘されたように、値にばらつきがあるような場合（凹凸形状な分布）だとやはり、中央値を確認すべきなので、&lt;strong&gt;[分布]&lt;/strong&gt;タブをクリックすれば、どの値の範囲に多いのか確認できます。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;/static/blog/2013/04/fig.png&#34;&gt;&lt;img class=&#34;aligncenter size-large wp-image-4889 fig&#34; title=&#34;Distribution&#34; src=&#34;/static/blog/2013/04/fig.png&#34; alt=&#34;&#34; width=&#34;540&#34; height=&#34;340&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
またディレクトリごとで読み込み時間の違いを確認したり、端末ごとでの読み込み時間を確認するといったことも可能でしょう。&lt;/p&gt;

&lt;p&gt;さて、この読み込み時間ってのはどこから取ってきてるのかと言いますと、&lt;a href=&#34;https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html&#34;&gt;Navigation Timing&lt;/a&gt;という仕様を実装しているブラウザからです。ユーザーがページ遷移するとネットワークの接続、サーバーレスポンス、ブラウザ読み込みにかかった時間が自動的にブラウザに記録され、その情報をGAがサーバーに送ってるといった感じです。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img class=&#34;size-full wp-image-4848 aligncenter&#34; title=&#34;Before&#34; src=&#34;/static/blog/2013/04/f1.png&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;300&#34; /&gt;&lt;/p&gt;
これまでというか、一昔前まではそうゆうことを計測しようと思うと上記のようなコードを挿入して計測していた気がします。これをページの読み込み時間と定義してしまうのは、いささか問題があります。Aのページの読み込みを考えれば、当然Bとなど他のページから遷移したと想定され、Bのページのリンクを押してから、Aのベージの読み込み完了までが本来の意味での（体感的な）読み込み時間と考えるべきでしょう。つまり、上記のコードではネットワークやサーバーのやり取りの部分が考慮されてないことを意味します。またそもそも&lt;a href=&#34;http://ejohn.org/blog/accuracy-of-javascript-time/&#34;&gt;JavaScriptでの時間計測は不正確&lt;/a&gt;ということも懸念されます。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-4836&#34; title=&#34;After&#34; src=&#34;/static/blog/2013/04/f2.png&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;340&#34; /&gt;&lt;/p&gt;
より体感に近い読み込み時間を考慮すれば上図のような流れを計測すべきです。このような計測をJavaScriptだけで行おうとするとやや複雑な処理を記述しなければなりません。そんなめんどくさいことしなくても計測できるようになったのが、Navigation timingです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2013/04/s21.png&#34;&gt;&lt;img class=&#34;size-large wp-image-4838 fig&#34; title=&#34;技術&#34; src=&#34;/static/blog/2013/04/s21.png&#34; alt=&#34;&#34; width=&#34;540&#34; height=&#34;445&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;もう一度、GAのレポート（[コンテンツ] &amp;gt; [サイトの速度] &amp;gt; [ページ速度]）を見てみると、『平均表示時間』の以外にも様々な指標が確認できるでしょう。
&lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;平均リダイレクト時間&lt;/strong&gt;（ページを読み込む前にリダイレクトにかかった平均時間。リダイレクトがなければ0になる）&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;ドメインの平均ルックアップ時間&lt;/strong&gt;（ページのDNS名前解決にかかった平均時間）&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;サーバーの平均接続時間&lt;/strong&gt;（サーバーとのTCPコネクション確立に要した平均時間）&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;サーバーの平均応答時間&lt;/strong&gt;（サーバーがユーザーリクエストに応答するまでの時間。ユーザーの所在地からサイトのサーバーにアクセスするネットワークの通信時間も含まれる）&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;ページの平均ダウンロード時間&lt;/strong&gt;（ ページ（のみ）のダウンロードにかかった時間）&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;[エクスプローラ]&lt;/strong&gt;タブの&lt;strong&gt;[技術]&lt;/strong&gt;にはネットワークとサーバーに関する指標がレポーティングされています。『平均表示時間』の大半がこの部分で占められていれば、フロントエンドエンジニアではなくサーバーサイドエンジニアに文句を言いましょう。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2013/04/s3.png&#34;&gt;&lt;img class=&#34;size-large wp-image-4837 fig&#34; title=&#34;DOM速度&#34; src=&#34;/static/blog/2013/04/s3.png&#34; alt=&#34;&#34; width=&#34;540&#34; height=&#34;445&#34; /&gt;&lt;/a&gt;
&lt;ol&gt;
    &lt;li&gt;&lt;strong&gt;平均ドキュメントインタラクティブ時間&lt;/strong&gt;（ドキュメントがパースされるのにかかった平均時間。このときDOMは完全に読み込まれてはいないが、ユーザー操作可能な状態。またユーザーの所在地からサイトのサーバーにアクセスするネットワークの通信時間も含まれる）&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;平均ドキュメントコンテンツ読み込み時間&lt;/strong&gt;（ドキュメントがパースされDOMContentLoadedを実行するのにかかった平均時間。このときDOMは読み込まれているがCSSや画像などのリソースが読み込みが完了しているわけではない）&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;[エクスプローラ]&lt;/strong&gt;タブの&lt;strong&gt;[DOM速度]&lt;/strong&gt;にはドキュメント解析に関する指標がレポーティングされています。『平均表示時間』の大半がこの部分で占められていればDOMが複雑すぎるのでしょう。コーダーに文句を言いましょう。&lt;/p&gt;

&lt;p&gt;平均ドキュメントインタラクティブ時間と平均ドキュメントコンテンツ読み込み時間はほぼ同義って思っていいでしょう（ここで差が出るケースがわからない）。&lt;/p&gt;

&lt;p&gt;とりあえずこれらのレポートは特に手間を要することなくGAスニペットが挿入されていれば、サイトユーザーの1%のサンプリングレートで記録されるので、ほっといてもデータ溜まっていきます。1%じゃサイトの規模的に足りないって方は&lt;a href=&#34;https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration#_gat.GA_Tracker_._setSiteSpeedSampleRate&#34;&gt;_setSiteSpeedSampleRate()&lt;/a&gt;を使えばサンプルレートを調整できます。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;https://support.google.com/analytics/answer/1205784?hl=ja&amp;amp;ref_topic=1282106&#34;&gt;サイトの速度について - アナリティクス ヘルプ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;対応しているブラウザは:5d553aa52a0d71ffe93812f3cbaa3ce3&#34;&gt;対応しているブラウザは？&lt;/h2&gt;

&lt;p&gt;さて、 このNavigation Timingに対応したブラウザってどんなもんなんでしょう。ヘルプには下記のように書いてありました。
&lt;blockquote&gt;サイトの速度のトラッキングは、HTML5 Navigation Timing インターフェース対応のブラウザか、Google ツールバーがインストールされたブラウザからの訪問に対してのみ行われます。該当する主なブラウザには、Chrome、Firefox 7 以降、Internet Explorer 9 以降、Android 4.0 以降のブラウザと、Google ツールバーがインストールされた Internet Explorer の以前のバージョンなどがあります。&lt;/blockquote&gt;
ほうほう、Navigation Timingに対応してなくても、PCだとGoogleツールバー入れてたらいいんだね。って、俺の知りたいのはスマホだ、iOSだ！ということで。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://caniuse.com/#search=Navigation%20Timing%20API&#34;&gt;&lt;img class=&#34;aligncenter  wp-image-4873 fig&#34; title=&#34;Navigation Timing&#34; src=&#34;/static/blog/2013/04/f9b438c86a9e68bc50b3b9b65b4fca5e.png&#34; alt=&#34;&#34; width=&#34;870&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
Can I use&amp;hellip;で見てみると、iOS全滅じゃん！Desktop Safariでさえ対応してないと見ると、Appleさんは対応する気がないんでしょうかね&amp;hellip;(´・ω・`)&lt;/p&gt;

&lt;p&gt;とはいえ、&lt;a href=&#34;http://japanese.engadget.com/2013/04/02/android-4-0-55/&#34;&gt;Android4.0以降がバージョン別シェア半数&lt;/a&gt;を超えたとかニュースで言っておりましたし、今後のモバイルの主流になっていくの当然であり、十分な量のデータサンプルを収集することも難なくできるでしょう。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://www.browserscope.org/?category=network&amp;amp;v=top-m&amp;amp;ua=Android%202.3%2CAndroid%204%2CiPhone%205%2CiPhone%206&#34;&gt;&lt;img class=&#34;aligncenter  wp-image-4875 fig&#34; title=&#34;Browserscope&#34; src=&#34;/static/blog/2013/04/cad4f2acb23f9d4aa554d564aa920837.png&#34; alt=&#34;&#34; width=&#34;870&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
 また、Android4.0以降であればパフォーマンスの観点からいってもiOSとひけをとりません（むしろ4.0のほうがいいくらい）なので、Android4.0で集められたGAレポートのデータを暫定的にiOSでもこのくらいの読み込み時間かなーと考えといても良いかなと個人的には考えています。&lt;/p&gt;

&lt;h2 id=&#34;もうちょっと詳しく:5d553aa52a0d71ffe93812f3cbaa3ce3&#34;&gt;もうちょっと詳しく&amp;hellip;&lt;/h2&gt;

&lt;p&gt;&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-4866 fig&#34; title=&#34;Navigation Timing&#34; src=&#34;/static/blog/2013/04/nt.png&#34; alt=&#34;&#34; width=&#34;870&#34; height=&#34;540&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
もうちょっと細かく、Navigation Timingの仕様を見てみましょう。上図は仕様書にも書いて有るNavigation Timingの概要です。なんかいっぱいタイミングがあってごちゃごちゃします。まぁこのように細かく分けることでどこがボトルネックか突き止めることができるってもんです。とはいえ覚えきれないので、もっと大雑把に考えたのが下図。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-4840&#34; title=&#34;three&#34; src=&#34;/static/blog/2013/04/f3.png&#34; alt=&#34;&#34; width=&#34;400&#34; height=&#34;340&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ブラウザー、ネットワーク、サーバーの登場人物は3人です。『読み込み時間』とひとくくりに言っても3つのカテゴリーに分けて考えることができます。つまり問題を整理して対応策を考えることできます。&lt;/p&gt;

&lt;p&gt;さらに、ブラウザー、ネットワーク、サーバーで色分けし、先ほどのGAレポートの項目とNavigation Timingの項目を照らし合わせたのが下の図。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-4861&#34; title=&#34;f4&#34; src=&#34;/static/blog/2013/04/f4.png&#34; alt=&#34;&#34; width=&#34;750&#34; height=&#34;750&#34; /&gt;&lt;/p&gt;

&lt;p&gt;やっべーわかりやっしーちょーわかりやっしー。&lt;/p&gt;

&lt;p&gt;とこのように、Google アナリティクスの『サイトの速度』を利用すれば、公正でかつ正確なサイトのパフォーマンス評価をすることが可能です。また、それに対する策も考えやすいといったように開発者にやさしい機能となっていますので、みなさんじゃんじゃん使ってみてください。&lt;/p&gt;

&lt;p&gt;最後に地域が日本で、ブラウザーがAndroidのスマホ用のサイトの速度カスタムレポート作っときました。
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.google.com/analytics/web/template?uid=tyEajMvPSySkw9VSN6vzMg&#34;&gt;Navigation Timing用カスタムレポート&lt;/a&gt;（スマホ用）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;

&lt;p&gt;最後にGAの『サイトの速度』レポートはできて日が浅く（そもそもNavigation Timing自体仕様が勧告でない）、データが集まりにくかったりかゆいところに手がとどかなかったりするのは致し方無いかないう印象です。もし、お金払ってでももっと正確なデータが欲しいという方は、&lt;a href=&#34;http://www.keynotesystems.jp/#!measurement-and-monitoring/c196n&#34;&gt;Keynote Systemsのような有料の計測サービス&lt;/a&gt;を利用するのもひとつの手段かと思います。&lt;/p&gt;

&lt;h2 id=&#34;参考:5d553aa52a0d71ffe93812f3cbaa3ce3&#34;&gt;参考&lt;/h2&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.html5rocks.com/en/tutorials/webperformance/basics/&#34;&gt;Measuring Page Load Speed with Navigation Timing - HTML5 Rocks&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.igvita.com/2012/04/04/measuring-site-speed-with-navigation-timing/&#34;&gt;Measuring Site Speed with Navigation Timing - igvita.com&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.d-bow.com/post/17368332231/measuring-page-load-times-navigation-timing-api-vs&#34;&gt;dblog, Measuring Page Load times: Navigation Timing API vs Inline JavaScript with the Date object&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.html5rocks.com/ja/tutorials/internals/howbrowserswork/&#34;&gt;ブラウザのしくみ: 最新ウェブブラウザの内部構造 - HTML5 Rocks&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://66.7percentangel.com/2011/12/breaking-down-onload-event-performance-bookmarklet/&#34;&gt;Breaking Down onLoad Event – Performance Bookmarklet | Kasia Drzyzga&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Google Analytics トラッキングスニペット再考（2012年モバイル版）</title>
      <link>http://localhost:1313/mol/log/defer-parsing-of-google-analytics/</link>
      <pubDate>Fri, 28 Sep 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/defer-parsing-of-google-analytics/</guid>
      <description>&lt;p&gt;秋色日毎に深まりこんちわ、&lt;a href=&#34;https://twitter.com/t32k&#34;&gt;@t32k&lt;/a&gt;だ。&lt;a href=&#34;http://t32k.me/mol/log/remote-debugging-with-chrome-for-android/&#34;&gt;前回も&lt;/a&gt;少し言いましたが&lt;a href=&#34;https://developers.google.com/speed/pagespeed/insights#url=http_3A_2F_2Ft32k.me_2Fmol_2F&amp;amp;mobile=true&#34;&gt;PageSpeedにモバイル版&lt;/a&gt;というのがありまして、デスクトップ版とは少々違うことをこいつは物申してきます。テストするページにもよりますが例えば、デスクトップ版であれば、「&lt;strong&gt;ブラウザのキャッシュを活用する&lt;/strong&gt;」や「&lt;strong&gt;圧縮を有効にする&lt;/strong&gt;」がHigh priorityな対策としてよく指摘されます。モバイル版でもそれらは重要かつ効果のある対策ですが、さらに対応しておきたいのが「&lt;strong&gt;JavaScript の解析を遅延する&lt;/strong&gt;」という対策です。&lt;/p&gt;

&lt;p&gt;ざっくり言えば、そのJavaScriptが本当に必要になるまで後にとっておくということです。スマホなどの携帯端末は言うまでもなく、デスクトップPCに比べれば非力なので、このような端末ではJavaScriptを解析するのにもなかなか時間を要してしまうので、注意しましょうってことです。&lt;/p&gt;

&lt;p&gt;PCサイトで、それも単純にドキュメント閲覧のようなページのパフォーマンス対策なんて、HTTPリクエストを減らすことだけ考えていれば十分事足りるなぁと個人的には考えています。ただ、最近やってるお仕事はスマホ向けのWebアプリ制作でして、JSゴリゴリ使ってます。。。この辺りのパフォーマンス対策というのをもうちょっと真剣に考えたいお年頃になってきたので、今回がんばってみます。&lt;/p&gt;

&lt;p&gt;ただ、僕はJSは書けないので難しいことはよく分からんとです。お先真っ暗、八方塞がりです。唯一気になっていることは今のプロジェクトでhead要素に入れてあるGoogleアナリティクスのスニペットって本当にここでいいのか？ということです。これね、これ↓
&lt;pre&gt;&lt;code class=&#34;javascript&#34;&gt;&amp;lt;script type=&amp;ldquo;text/javascript&amp;rdquo;&amp;gt;
  var _gaq = _gaq || [];
  _gaq.push([&amp;rsquo;_setAccount&amp;rsquo;, &amp;lsquo;UA-XXXXX-X&amp;rsquo;]);
  _gaq.push([&amp;rsquo;_trackPageview&amp;rsquo;]);
  (function() {
    var ga = document.createElement(&amp;lsquo;script&amp;rsquo;); ga.type = &amp;lsquo;text/javascript&amp;rsquo;; ga.async = true;
    ga.src = (&amp;lsquo;https:&amp;rsquo; == document.location.protocol ? &amp;lsquo;&lt;a href=&#34;https://ssl&#39;&#34;&gt;https://ssl&#39;&lt;/a&gt; : &amp;lsquo;&lt;a href=&#34;http://www&#39;&#34;&gt;http://www&#39;&lt;/a&gt;) + &amp;lsquo;.google-analytics.com/ga.js&amp;rsquo;;
    var s = document.getElementsByTagName(&amp;lsquo;script&amp;rsquo;)[0]; s.parentNode.insertBefore(ga, s);
  })();
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div&gt;&lt;/div&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://t32k.me/mol/log/asynchronous-tracking/&#34;&gt;Google Analytics 非同期トラッキングコード再考 | MOL&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
はい、2年前にこの記事を書いたのは僕でして、そこでは&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;の直前に入れるということで結論づけました。ただこれはPCサイト前提での話なので、今のスマホ時代にも通じるのかもう一度考えてみましょう。
&lt;h2&gt;script要素の読み込みと評価&lt;/h2&gt;
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;/static/blog/2012/09/fig_1.png&#34;&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;/static/blog/2012/09/fig_1.png&#34; alt=&#34;JavaScript resource fetching, parsing and evaluation&#34; width=&#34;500&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;http://calendar.perfplanet.com/2011/lazy-evaluation-of-commonjs-modules/&#34;&gt;Performance Calendar » Lazy evaluation of CommonJS modules&lt;/a&gt; より&lt;/p&gt;
script要素を入れることでかかるコストについて上記の図のような感じですね。LatencyとDownloadが読み込みに関わるところで、普通にscript要素を読み込むと、通常のリソースは並列ダウンロードできるのに対して、script要素は他のリソースのダウンロードをブロッキングします。まぁ、scriptを早い段階で読み込むとそれだけページ表示に余計に時間がかかってしまいます。この点でノンブロッキングな読み込みを実現したのがGoogle Analyticsの非同期トラッキングコードで並列ダウンロードが可能となりました。また、トラッキング用のJSファイルにはga.jsには12時間の有効期限が設定されているので、次ページビュー、当日中くらいのセッション再開後もキャッシュが有効となり、LatencyとDownloadの部分は省略できます。&lt;/p&gt;

&lt;p&gt;ただ、お気付きの通りParsingとEvaluationはキャッシュがあろうがなかろうが毎回コストを支払わなければなりません。しかもParsingとEvaluationの実行中はレンダリングが止まってしまいます。PCサイトであればこの点が無視できるほど短い時間で完了するので、head要素においても大した影響がないということでした。事実、&lt;a href=&#34;https://twitter.com/tobie&#34;&gt;@tobie&lt;/a&gt;さんの&lt;a href=&#34;http://calendar.perfplanet.com/2011/lazy-evaluation-of-commonjs-modules/&#34;&gt;記事でもjQeuryのParsingとEvaluation&lt;/a&gt;のコストはMacBook Proが&lt;strong&gt;35ms&lt;/strong&gt;に対して、iPhone4が&lt;strong&gt;320ms&lt;/strong&gt;かかっている調査結果でした。つまり、jQueryを使おうが使わまいが、キャッシュが効いてようが効いてまいが、iPhone４ユーザーはjQueryが読み込まれている時点で毎回320ms（設置場所によっては）レンダリングが止まる時間ができるということです。&lt;/p&gt;

&lt;p&gt;[caption id=&amp;ldquo;&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;500&amp;rdquo;]&lt;a href=&#34;http://www.slideshare.net/souders/javascript-performance-at-sfjs&#34;&gt;&lt;img class=&#34; &#34; src=&#34;/static/blog/2012/09/load_scripts_async.png&#34; alt=&#34;2009 load scripts async&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/a&gt; Google Analyticsの非同期トラッキングコードはノンブロッキングに読み込みできるが、&lt;br /&gt;script実行中はレンダリングを止める。[/caption]
&lt;h2&gt;Google Analyticsの実行コスト&lt;/h2&gt;
そこでこのjQueryのテストのGoogle Analytics版を作ってみました。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://dl.dropbox.com/u/356242/cost_ga.html&#34;&gt;http://dl.dropbox.com/u/356242/cost_ga.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
Google Analyticsは基本的にページビュー計測を目的に入れると思いますので、単純に評価だけでなく毎ページごと実行（ビーコン画像発行）されると想定したテストです。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;/static/blog/2012/09/fig2.png&#34;&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;/static/blog/2012/09/fig2.png&#34; alt=&#34;&#34; width=&#34;500&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
上記のページで10回アクセスしてその平均値をグラフにしました。詳細は下記スプレッドシートにまとめてあります。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheet/ccc?key=0ApycgWz4whD1dHhIWXVSTTRobEN1elFtYndPb0FIcFE#gid=0&#34;&gt;Cost of Execute Google Analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
iPhone3Gは論外ですけど、今現在でも広く使われてそうな機種（iPhone4やGALAXY S2）でも100ms~200msくらい実行に時間がかかっています。これがhead要素に入ってるこということは、それ以降のレンダリングが100ms~200msストップしているということになります。（実際の実装状況をかんがみるともう少し掛かりそうな気がする）&lt;/p&gt;

&lt;p&gt;100msというとニールセン博士の&lt;a href=&#34;http://www.usability.gr.jp/alertbox/20100621_response-times.html&#34;&gt;ウェブサイトの応答時間&lt;/a&gt;では&lt;strong&gt;&amp;ldquo;0.1秒までなら応答が瞬時に返ってきたという印象を与える&lt;/strong&gt;&amp;ldquo;と述べていますので、Google Analytics だけでこの貴重な0.1秒使ってしまうことは非常にもったいないと個人的には考えます。
&lt;h2&gt;&lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt;か&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;か&lt;/h2&gt;
では、単純に&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;の直前にスニペットを配置しても問題無いのでしょうか？Steve Soudersは&lt;a href=&#34;http://www.slideshare.net/souders/javascript-performance-at-sfjs&#34;&gt;JavaScript Performance (at SFJS)&lt;/a&gt;でGoogle Analyticsのスニペットの設置場所についてまとめています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.youtube.com/watch?v=0AP15IXFBnc&#34;&gt;http://www.youtube.com/watch?v=0AP15IXFBnc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;&amp;lt;/head&amp;gt;の場合&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;script loads later&lt;/li&gt;
    &lt;li&gt;beacon fires later&lt;/li&gt;
    &lt;li&gt;blocks fewer async(Opera)&lt;/li&gt;
    &lt;li&gt;may block rendering&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;code&gt;&amp;lt;/body&amp;gt;の場合&lt;/code&gt;&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;script loads last&lt;/li&gt;
    &lt;li&gt;beacon fires late&lt;/li&gt;
    &lt;li&gt;doesn’t block async&lt;/li&gt;
    &lt;li&gt;doesn’t block rendering&lt;/li&gt;
&lt;/ul&gt;
はい、結局トレードオフの関係にあります。スニペットを単純に下に置けばレンダリングをブロックしませんが、その分ビーコン画像の発行が遅れます。そもそも、非同期トラッキングコードがリリースされた時のメリットにデータの収集・精度の向上が挙げられています。つまり、スニペットがページ下部にあればページを完全にロードしないで次のページへ遷移してしまった人などが計測できなくなります。この部分をどう捉えるかで設置場所は決まってくるでしょう。&lt;/p&gt;

&lt;p&gt;そもそも、ページ読み込み完了も待てないページビューをページビューとしてカウントしてもいいもなのかという個人的な疑問もあります。というより、ユーザーの満足度 &amp;gt;&amp;gt;&amp;gt; (越えられない壁 )  &amp;gt;&amp;gt;&amp;gt; アクセス解析の精度だと考えるので僕はスマホサイトに関しては&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;の直前に設置したほうが良いと考えます。(スマホ用のga.js作ればいいのにと思ったり。jQueryにおけるZeptoみたいにIE対応とか考えなかったらもう少しシンプル・軽量化出来ると思うけど。)&lt;/p&gt;

&lt;p&gt;ちなみに、&lt;a href=&#34;https://github.com/h5bp/html5-boilerplate/blob/master/index.html&#34;&gt;HTML5のボイラープレート&lt;/a&gt;（ひな形）を見てみると、デスクトップ、モバイル版ともに&amp;lt;/body&amp;gt;の直前に配置されています。
&lt;blockquote&gt;Finally, an optimized version of the latest Google Analytics tracking code is included. Google recommends that this script be placed at the top of the page. Factors to consider: if you place this script at the top of the page, you’ll be able to count users who don’t fully load the page, and you’ll incur the max number of simultaneous connections of the browser.
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;https://github.com/h5bp/html5-boilerplate/blob/master/doc/html.md#google-analytics-tracking-code&#34;&gt;Google Analytics Tracking Code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
注意書きとしても同じようなことが言われています。あと、head要素に置けばビーコン画像リクエストによる同時接続数の1つを消費してしまうことも懸念点としてあげられています。&lt;/p&gt;

&lt;p&gt;最後に自分が使ってるスニペット置いときますね。
&lt;pre&gt;&lt;code class=&#34;javascript&#34;&gt;&amp;lt;script id=&amp;ldquo;gaq&amp;rdquo;&amp;gt;
　var _gaq=[[&amp;rsquo;_setAccount&amp;rsquo;,&amp;lsquo;UA-XXXXX-X&amp;rsquo;],[&amp;rsquo;_trackPageview&amp;rsquo;]];
　(function(d){var g=d.createElement(&amp;lsquo;script&amp;rsquo;),s=d.getElementById(&amp;lsquo;gaq&amp;rsquo;);g.async=1;
　g.src=(&amp;lsquo;https:&amp;lsquo;==location.protocol?&amp;rsquo;//ssl&amp;rsquo;:&amp;lsquo;//www&amp;rsquo;)+&amp;lsquo;.google-analytics.com/ga.js&amp;rsquo;;
　s.parentNode.insertBefore(g,s)}(document));
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;a href=&#34;https://gist.github.com/3792738&#34;&gt;Google Analytics Tracking Snippet — Gist&lt;/a&gt;
&lt;h3&gt;あわせて読みたい&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://readhn-jp.blogspot.jp/2012/02/javascript.html&#34;&gt;ブラウザって毎回Javascriptを解析するの？&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://mathiasbynens.be/notes/async-analytics-snippet&#34;&gt;Optimizing the asynchronous Google Analytics snippet · Mathias Bynens&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://tokkono.cute.coocan.jp/blog/slow/index.php/web-technology/non-blocking-asynchronous-loading-of-css-javascript/&#34;&gt;CSS/JavaScriptのAsynchronous Loadingをめぐる熱い論議 | ゆっくりと…&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>大規模サイトにおける Googleアナリティクス導入から成果まで</title>
      <link>http://localhost:1313/mol/log/google-analytics-on-large-site/</link>
      <pubDate>Mon, 16 Jan 2012 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/google-analytics-on-large-site/</guid>
      <description>&lt;p&gt;ありがたくも、&lt;a href=&#34;http://lp19.cssnite.jp/&#34;&gt;CSS Nite LP, Disk 19「アクセス解析」&lt;/a&gt;で話した「大規模サイトにおけるGoogleアナリティクス導入から成果まで〜Webデザイナーがアクセス解析に携わってみて〜」が 、&lt;a href=&#34;http://cssnite.jp/archives/best-session2011.html&#34;&gt;CSS Niteベストセッション2011&lt;/a&gt; のベスト20に選ばれたので、文字に起こしてみるの巻。&lt;/p&gt;

&lt;p&gt;&lt;object id=&#34;__sse10814106&#34; width=&#34;500&#34; height=&#34;426&#34; classid=&#34;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34;&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;param name=&#34;allowScriptAccess&#34; value=&#34;always&#34; /&gt;&lt;param name=&#34;wmode&#34; value=&#34;transparent&#34; /&gt;&lt;param name=&#34;src&#34; value=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=lp19ishimoto-120105025806-phpapp02&amp;amp;stripped_title=lp19-ishimoto&amp;amp;userName=t32k&#34; /&gt;&lt;param name=&#34;allowscriptaccess&#34; value=&#34;always&#34; /&gt;&lt;param name=&#34;allowfullscreen&#34; value=&#34;true&#34; /&gt;&lt;embed id=&#34;__sse10814106&#34; width=&#34;500&#34; height=&#34;426&#34; type=&#34;application/x-shockwave-flash&#34; src=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=lp19ishimoto-120105025806-phpapp02&amp;amp;stripped_title=lp19-ishimoto&amp;amp;userName=t32k&#34; allowFullScreen=&#34;true&#34; allowScriptAccess=&#34;always&#34; wmode=&#34;transparent&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34; /&gt; &lt;/object&gt;&lt;/p&gt;

&lt;p&gt;DMM.com Laboの石本です。よろしくお願いします。今日は大規模サイトでのGoogleアナリティクス運用について話します。そんなに難しいことではないので、リラックスして読んでもらえれば幸いです。
&lt;h2&gt;アジェンダ&lt;/h2&gt;
本日の流れはこんな感じでやっていきます。
&lt;ol&gt;
    &lt;li&gt;自己紹介&lt;/li&gt;
    &lt;li&gt;アクセス解析への動機&lt;/li&gt;
    &lt;li&gt;プロファイルの適正化&lt;/li&gt;
    &lt;li&gt;コンバージョン設定から改善施策へ&lt;/li&gt;
    &lt;li&gt;まとめと今後の課題&lt;/li&gt;
&lt;/ol&gt;
&lt;div&gt;&lt;/div&gt;
&lt;h2&gt;自己紹介&lt;/h2&gt;
では、やっていきましょう。まずは自己紹介させてください。Twitter IDは&lt;a href=&#34;https://twitter.com/#!/t32k&#34;&gt;@t32k&lt;/a&gt;でWebデザイナーをしています。&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2011&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt;/26ですね。共著ですが「&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4844362232/ref=as_li_ss_tl?ie=UTF8&amp;amp;tag=warikiru-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4844362232&#34;&gt;スマートフォンサイト制作の教科書&lt;/a&gt;」という本を書きました。初めてスマートフォンサイトを作る方、入門者向けですので、今後のスマートフォンサイトの概要を知る上でもマーケッターさんの方も買ってもらってもいいんじゃないかなと思います。オールカラーで読みやすいです。&lt;/p&gt;

&lt;p&gt;あとは趣味でiPhoneアプリを作ったりしています。左が&lt;a href=&#34;http://itunes.apple.com/app/nyars/id433610083?mt=8&#34;&gt;Nyars&lt;/a&gt;というアプリで、なんてことのないただの猫耳をオーバーレイして写真が取れるというものです。右が&lt;a href=&#34;http://itunes.apple.com/app/tissa/id464594372?mt=8&#34;&gt;tissa&lt;/a&gt;というアプリで、なんてことのないただのタイマーアプリで350円で売ってます。
&lt;h2&gt;アクセス解析への動機&lt;/h2&gt;
と言うわけで、本題に入ってきます。見た感じ完全に制作サイドのWebデザイナーがなにゆえアクセス解析に興味をもったのかと話していきます。&lt;/p&gt;

&lt;p&gt;まず私の毎日仕事しているフィールドです、みなさんもご存知かと思いますがDVDレンタルなどで有名な&lt;a href=&#34;http://www.dmm.com/&#34;&gt;DMM.com&lt;/a&gt;です。レンタル以外にも動画配信や、通販事業なども行っています。そこで私も含めたWebデザイナーこのような、商品の特集ページであったりヘルプページ、バナーなど制作しています。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;img class=&#34;aligncenter size-full wp-image-3895&#34; title=&#34;DEM&#34; src=&#34;/static/blog/2012/01/19.010-002.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;
当たり前ですが、Webサイトはデザイナーだけでは作れません。サイトをしっかりと運用していくにはデザイナー以外にもエンジニアの力も必要ですし、マーケッターさんの力も不可欠です。しかし、お互いが協力していくには相手の言葉を知らなすぎるような気がします。例えば、マーケッターさんがデザイナーにCPCがどーたらCPAがどーたらといってもピンとこないでしょうし、反対にデザイナーがマーケッターさんにUXDやIAがどーたらと言っても理解してもらえないと思います。まぁ大げさな例ですが、多かれ少なかれ似たようなケースがそこかしこで起きているでしょう。私はデザイナー5年目ですが、この人らは同じ日本語を喋りますが、違う言語の中で生きてると理解しています。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E3%83%A8%E3%83%8F%E3%83%B3%E3%83%BB%E3%83%B4%E3%82%A9%E3%83%AB%E3%83%95%E3%82%AC%E3%83%B3%E3%82%B0%E3%83%BB%E3%83%95%E3%82%A9%E3%83%B3%E3%83%BB%E3%82%B2%E3%83%BC%E3%83%86&#34;&gt;&lt;img class=&#34;aligncenter fig&#34; title=&#34;Johann Wolfgang von Goethe&#34; src=&#34;/static/blog/2012/01/19.012-001.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
これは私の好き言葉でもありますが、外国語を知らないもの者は母国語を知らないとゲーテは言っています。相手の言っていることは理解したいですし、そうすることで自分の言語：デザインに関しても理解が深まれば好都合です。そうゆうことで自分に対してはこのようなスタンスで臨めば良いかもしれませんが、これを他者に求めるのは酷なこともかもしれません。ましてや、クライアントや上司の方に、あんたデザインなんでわかってないんや！などとは言えません。&lt;/p&gt;

&lt;p&gt;そこで皆が共通に理解できるモノが必要となってきます。はい、数字ですね。3は3でありそれ以上でもそれ以下でもありません。3が4になれば増えたということ、2になれば減ったということは、どんな職種の人だろうと同じ理解を得られるわけです。そして、Webサイトの数字といえばアクセス解析であり、それが切実に必要だと感じています。
&lt;h2&gt;プロファイルの適正化&lt;/h2&gt;
というわけで、デザイナーですけどアクセス解析をやってこうと考えたわけですが、そう簡単にうまくはいきません。プロファイル（Google アナリティクスのレポート）の閲覧の段階でまずつまづきましたという話をしていきます。&lt;/p&gt;

&lt;p&gt;その前に、DMM.comのサイト規模を紹介したいと思います。DMM.comはクレジット登録しているなどすぐに課金可能な会員が362万人。月間ユニークユーザーが1900万人の8.6億ページビュー。Google アナリティクスのプロファイル数は83個、Google アナリティクスにアクセスできるユーザー数は119人ほどです。&lt;/p&gt;

&lt;p&gt;正直このレベルになってくると、データの嵐の海を彷徨うのと同じようなもので、ただトラッキングコードを入れていればOKという話ではありませんでした。そこで最初にとりかかった作業がプロファイルの適正化です。誰が見てもおかしくない数値、見たい情報を見ることができるプロファイルにしなければなりません。&lt;/p&gt;

&lt;p&gt;Google アナリティクスを大規模サイトで使用する上で問題になってくるのが50,000URL問題です。ちょうど&lt;a href=&#34;http://code.google.com/intl/ja/apis/analytics/docs/index.html&#34;&gt;Googleアナリティクス開発者向けドキュメント&lt;/a&gt;に該当の問題ついて述べられてるところがあります。
&lt;blockquote&gt;&lt;strong&gt;1日あたり、50,000 を超える一意の URL または仮想ページをトラッキングしていますか。&lt;/strong&gt;
&lt;span style=&#34;font-size: x-small;&#34;&gt;Google Analytics では毎日、ウェブサイトから送信されてきたすべてのデータと、ページビューで並べ替えられた上位 50,000 ページ上のレポートを収集します。残りのページは、コンテンツ レポートの「(その他)という別のセクションにまとめられます。トラフィックの少ないページビューの詳しいレポート情報を表示するには、トラフィックの多いすべてのページビューを除外するフィルターを使用した新しいプロファイルを設定してください。これにより、上位 50,0000 の URL に残りのページを効率的に含められるようになります。&lt;/span&gt;&lt;/blockquote&gt;
これはどうゆうことかと言いますと、Google アナリティクスで1日で処理できるURL数はページビューの上位5万までなんですね。5万以上になると、それからは&lt;em&gt;&lt;strong&gt;（other）&lt;/strong&gt;&lt;/em&gt;（その他）という項目にまとめられてしまいます。これがどうゆう悪さをしますのかと言いますと、実際はページビューがカウントされているはずのページ、GIFリクエストも発生しているのにもかかわらず5万URLに入らなかったため、プロファイルで確認できないページが出てきます。全体のPVには入ってるんですけども、個別のURLレポートでは確認できないということです。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-3902&#34; title=&#34;other&#34; src=&#34;/static/blog/2012/01/19.022-002.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;

&lt;p&gt;全体のページビューを見ても、この青色の部分が（other）その他で全体の4割も占めています。このくらいになってくると、ページを製作して公開しても測定できないってことがよくありました。&lt;/p&gt;

&lt;p&gt;とりあえず、この５万URLの内訳はどうゆうものなのか調べてみます。このような商品の詳細ページというのが多くあります。これは通販のタイガー＆バニーのDVDですが動画配信でも同じ作品がありますし、この作品がレンタル出来ればレンタルフロアでも似たような詳細ページができあがります。つまりDMM.conでは1つの作品に対して複数のURLを生成してしまう可能性が高いです。こう言ったコンテンツは数百万単位でありますからこの時点でURLは5万におさまらないということが理解できます。&lt;/p&gt;

&lt;p&gt;またこのような商品リスト・一覧ページというのがあります。これは価格の高い順番、低い順番などで並べ替えができます。つまりURLのパラメータで処理することになるので、それだけURLが増えます。また1つのリストページに掲載できる商品も限られますので、1ページ2ページとページ数が増えていきます。&lt;/p&gt;

&lt;p&gt;このように、個々のURLを見ていくと当面、分析・解析しないようなURLが非常に多くあることが理解できます。私たちは解析を始めたばかりなのでこのような瑣末なとこに注力するのではなくもっと全体を見るほうが合理的でしょう。&lt;/p&gt;

&lt;p&gt;ということで、ハイレベルサイトマップという考えが重要になってきます。こんなのです。&lt;/p&gt;

&lt;p&gt;ハイレベルサイトマップ（ハイレベルサイトストラクチャ）というのは、サイトの概要・導線を理解するために必要なものです。URLごとではなくて、サイトの役割ごとでページをまとめて理解しようというものです。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-3896&#34; title=&#34;Hi_level&#34; src=&#34;/static/blog/2012/01/19.027-001.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これをDMM.comにあてはめて考えてみると、このようなハイレベルサイトマップができあがりました。トップページがあって商品一覧ページと詳細ページを行き気してる感じですかね。このレベルの情報の粒度で理解出来ればいいので、Google アナリティクスのプロファイルもこれが確認出来ればいいわけです。つまり、私が欲しいのはハイレベルサイトマップ用のプロファイルが欲しいということです。&lt;/p&gt;

&lt;p&gt;ハイレベル用のプロファイルを作成するには、同じ種類のページのURLをまとめる必要があります。そのためには、プロファイルに対してカスタム詳細フィルタをかけてあげます。&lt;/p&gt;

&lt;p&gt;もうちょっとわかりやすくしたのが次のスライドです。URLを書き換えるためにはその対象となるURLを抜き出して再構成する必要があります。この場合、detailもしくはlistを含むものを引き出してきます。それをdetailもしくはlist以下のパラメータは全部削除して上書きしています。実際のURLに当てはめるとこうなります。はいこれで、だいぶURL数が少なすることができました。&lt;/p&gt;

&lt;p&gt;おまけですが、正規表現ってのはやっぱり意味がわからないですよね。いきなり自信のない正規表現のフィルタをデータにかけるのはかなり危険なことなので練習する必要あります。Google アナリティクスであればコンテンツのアドバンスフィルタを有効にして正規表現を選択すれば実際のサイトURLで練習ができます。またローカルで確認したければWindowsなら&lt;a href=&#34;http://weitz.de/regex-coach/&#34;&gt;regex Coach&lt;/a&gt;やMacなら&lt;a href=&#34;http://atastypixel.com/blog/reginald-regex-explorer/&#34;&gt;Reginald&lt;/a&gt;がおすすめです。では、さきほどのフィルタ処理したあとのプロファイルはどーなっているのでしょうか。&lt;/p&gt;

&lt;p&gt;デフォルト状態だとこのように4割が(other)でしたが、フィルタ処理後のプロファイルには(other)は綺麗サッパリなくなりました。代わって、フロアごとのdetailページやlistページが計測されています。まさしくハイレベルサイトマップのためのプロファイルです。&lt;/p&gt;

&lt;p&gt;冒頭に見せました0PVのページもdetailとlistをまとめてゆとりがでたのか、ちゃんと計測されるようになりました。めでたしめでたし。&lt;/p&gt;

&lt;p&gt;これでデータの嵐だった海が、人が理解できる・役立つInformation・情報の湖となりました。今度はこの湖をうまくこぐ必要がでてきます。
&lt;h2&gt;コンバージョン設定から改善施策へ&lt;/h2&gt;
次は実際にGoogle アナリティクスを使って改善施策をしてみます。ここまでサラッと言いましたが、実際はプロファイルの適正化に1年くらいかかかってます（当時はGoogle アナリティクスの情報も少なかったですし、開発者ドキュメントも翻訳されていない状態でした&amp;gt;&amp;lt;）。そろそろ、結果ださないと社内に居場所ないなーって空気になってきたので本気で成果を出さなければなりません。&lt;/p&gt;

&lt;p&gt;ということで今一度、成果・ゴールとは何かとゆうのを確認してみましょう。DMM.comの場合は簡単ですね。Eコマースサイトなので お金を稼ぐことです。 商品をいっぱい売ることが目標です。これ自体は至極簡単な話です。&lt;/p&gt;

&lt;p&gt;そのためには商品が売れてるかどうかを確認する必要性があります。はい、コンバージョン設定を忘れておりました。コンバージョン設定のないGoogle アナリティクスは魅力半減といってもいいほど、これがないと意味がありません。当たり前ですよね、売上を上げるために解析ツールを使ってるのにそのツールで成果を確認できなければ、何のために使ってるのか意味がわかりません。&lt;/p&gt;

&lt;p&gt;コンバージョンを設定するにはコンバージョンURLを指定するだけです。通常であればサンキューページといった購入完了ページをコンバージョンURLとして指定すればいいんですけど、DMM.comにはなかったんです。&lt;/p&gt;

&lt;p&gt;各事業部によってページ遷移に差異があります。今回のケースは動画配信フロアのケースですが、購入完了ボタンを押すと、そのままユーザーのマイライブラリに飛ばされます。このマイライブラリというページはユーザーの買った動画が視聴できるページです。このページをコンバージョンURLにすると、買った動画を見るためにアクセスする度にコンバージョンが発生してしいまいます。&lt;/p&gt;

&lt;p&gt;無駄にサンキューページを1枚挟むのもどうなのかと思い、今回はパラメータ処理で解決しました。バスケットに入れる、購入確認、マイライブラリと購入フローを通して遷移して来た場合のみ、URLにパラメータを付けることにしました。こうすることで普通にマイライブラリに遷移したときとは、URLで区別できるようにしたのです。はい、そうゆうわけで、めでたくコンバージョン推移を確認することができました。&lt;/p&gt;

&lt;p&gt;はい、次に改善にあたっての仮説と言うほど大それた事ではないのですが、ちょっと気になる点があります。&lt;/p&gt;

&lt;p&gt;先程のコンバージョンファネルを見てみましょう。問題となるのはここです。購入確認から購入完了となっているユーザーが93%となっています。これが多いのか少ないのか、現時点ではよく分かりませんが、あとはボタンを押すだけなのに離脱している人７％いるってのはどうなのかなと感じました。個人的には98%くらいあってもいいんじゃないかと。とどのつまり、取りこぼし多くない？ってことです。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-3897&#34; title=&#34;前&#34; src=&#34;/static/blog/2012/01/19.049-001.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;

&lt;p&gt;では、該当のページである購入確認がどのようなページなのか見てみましょう。これが改善前の購入確認ページです。該当の部分だけ表示しています。パッと見ごちゃごちゃして、どこを押せば購入完了となるのか瞬時に判断できません。一番の問題はここですね。購入完了と訂正するボタンがヴィジュアルのインパクトが同じであるのは頂けません。これを実際の生活で例えれば、例えばコンビニエンスストアで商品をレジまで持って行って、そこで店員がやめるの？買うの？って聞いてるようなものです。そんなのありえないですよね。&lt;/p&gt;

&lt;p&gt;まだ改善できそうなところはありそうですね。はい、この長ったらしい注意書きですね。Windows7のときはどうやら、利用規約がどーやらと。これも同じように考えればくどいです。またこのような注意書きはこのページ以外にも書かれていることなので、この場面であえて表記する必要はないと判断しました。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-3898&#34; title=&#34;後&#34; src=&#34;/static/blog/2012/01/19.050-005.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;

&lt;p&gt;改善後のページでは、購入するボタンを金色にすることで一番目立たせています。また注意書き、規約の同意文を一行だけにしてすっきりさせました。訂正するボタンがなくなったので、「変更する」テキストリンクを設置しました。これで、迷いはなくなるのではないかと考えます。&lt;/p&gt;

&lt;p&gt;結果はどーなったのでしょうか。&lt;/p&gt;

&lt;p&gt;施策前後8週間の購入確認から購入完了の遷移率を調べてみました。こんな感じです。赤が改善後、青が改善前を現してます。平均して1.52%上昇しました。一応&lt;a href=&#34;http://t32k.me/mol/log/statistical-significance/&#34;&gt;有意差検定&lt;/a&gt;もしてるので、たまたま上がったとは考えにくいです。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;aligncenter size-full wp-image-3900&#34; title=&#34;1000&#34; src=&#34;/static/blog/2012/01/19.053-001.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これがどれだけの売上へのインパクトだったかと、1回当たりの平均購入金額 * 1ヶ月当たりの1%平均ＣＶ数 * 改善率でおおよその金額が分かります。はい、1000万ほどの売上アップさせることができました。少なくとも翌月も改善の効果が見受けられたので2000万は確実です。工数もエンジニアとデザイナー2人が実質、3営業日くらいでやったのでコストパフォーマンスの高い仕事ができたのではないかと思っています。
&lt;h2&gt;まとめと今後の課題&lt;/h2&gt;
URLを設計するのはエンジニアなので、そうゆうことを気にしてもらえるだけでも正規表現とかも簡単なもので済みますし、デベロッパーを味方に付けておいて損はないかと思います。じゃないと自分で勉強してやらないとダメでしんどいです＞＜&lt;/p&gt;

&lt;p&gt;あと、お金じゃなくてもいいですけど、コンバージョンに近いところから手をつけ始めるのは、施策がダイレクトに成果に直結するので 分かりやすくて良いかと思います。やっぱり、どうしてもトップページなどの華やかなところから改修しがちですが、改修した結果それがどれだけコンバージョンアップに寄与できたの？ってことを考えるとちょっとあやふやになってしまいがちです。今回の購入フローページのように、目立たないところですが結果を出せたことで、同様のページにも目を向けさせることができたのは良いことだと思っています。&lt;/p&gt;

&lt;p&gt;最後に、Google Analytics PremiumですがGoogle アナリティクスのエンタープライズ用のサービスです。まだ、日本ではサービス開始されてはいませんが、10億コールで約1200万円支払うで、今回紹介した5万URLの問題も100万まで拡張できたり、手厚いやヘルプサポートが受けられるみたいです。これがあれば、こんなにも苦労しなかったのですけどね。。。&lt;/p&gt;

&lt;p&gt;また今後の課題としては、解析・改善までもってけるような教育や仕組みを作りたいです。&lt;/p&gt;

&lt;p&gt;Google アナリティクスや他の解析ツールでも言えることですが、ページ間の流れを理解するのは便利ですが、1つのページの中の要素がどのようにユーザーに受け止めらているのかってのを理解するにはちょっと役不足なので、Google アナリティクスを補完するという意味でVOYAGE GROUPナビさんもおすすめの&lt;a href=&#34;http://www.clicktale.com/&#34;&gt;ClickTale&lt;/a&gt;を導入中です。
&lt;p style=&#34;text-align: center;&#34;&gt;&lt;a href=&#34;http://www.flickr.com/photos/avinashkaushik/4056840164/&#34;&gt;&lt;img class=&#34;fig aligncenter&#34; title=&#34;The McDonald triplets!!&#34; src=&#34;/static/blog/2012/01/19.057-001.png&#34; alt=&#34;&#34; width=&#34;500&#34; height=&#34;375&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
ということで、まだアクセス解析の取り組みはスタートラインに立ったという現状なので暖かく見守って頂ければ幸いです。
&lt;h2&gt;リソース&lt;/h2&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://t32k.me/mol/log/google-analytics-other-entry/&#34;&gt;Google Analyticsの(other)とはなんぞや？ | MOL &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://t32k.me/mol/log/statistical-significance/&#34;&gt;施策前後のCV率に有意差はあるのか？ | MOL &lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://code.google.com/intl/ja/apis/analytics/docs/&#34;&gt;Google アナリティクス開発者向けドキュメント - Google Code&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://higashizm.sakura.ne.jp/reg/http://higashizm.sakura.ne.jp/reg/%0D&#34;&gt;はじめての正規表現&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://an-k.jp/blog/archives/2289&#34;&gt;ハイレベルサイトマップの作り方 | dIG iT&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.cms-ia.info/news/google-analytics-premium-launched/&#34;&gt;Google Analytics Premiumについてのまとめ :: 実践CMS*IA&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://uio.ecnavi.co.jp/category/%25E3%2583%2584%25E3%2583%25BC%25E3%2583%25AB/clicktale/&#34;&gt;ClickTale « VOYAGE GROUP UIO戦略室ブログ &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jQuery MobileでGoogle Analyticsを使うために気をつけなければいけないこと</title>
      <link>http://localhost:1313/mol/log/using-google-analytics-with-jquery-mobile/</link>
      <pubDate>Tue, 28 Jun 2011 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/using-google-analytics-with-jquery-mobile/</guid>
      <description>&lt;div id=&#34;__ss_8433078&#34; style=&#34;width: 425px;&#34;&gt;&lt;strong style=&#34;display: block; margin: 12px 0 4px;&#34;&gt;&lt;a title=&#34;Using Google Analytics with jQuery Mobile&#34; href=&#34;http://www.slideshare.net/t32k/using-google-analytics-with-jquery-mobile&#34;&gt;Using Google Analytics with jQuery Mobile&lt;/a&gt;&lt;/strong&gt; &lt;iframe frameborder=&#34;0&#34; height=&#34;355&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;http://www.slideshare.net/slideshow/embed_code/8433078&#34; width=&#34;425&#34;&gt;&lt;/iframe&gt; View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/t32k&#34;&gt;Koji Ishimoto&lt;/a&gt;&lt;/div&gt;
&lt;a href=&#34;http://gatracker.org/&#34;&gt;とあるとこ&lt;/a&gt;で、とある話をしたので、とあるスライド置いときますよ。

要点を言うと、jQuery MobileでAjax遷移してると、普通にGoogle Analytics置いてても作動しないから気をつけてねって話です。


&lt;h2&gt;GATC for jQuery Mobile&lt;/h2&gt;
僕はこうゆう感じでとりあえず対応しています。作動させるタイミングとフラグメント識別子を記録させるのがポイントです。あとはご自身のサイトに合わせてカスタマイズしていただければと思います。

&lt;pre&gt;&lt;code&gt;//Account Setting
var _gaq = _gaq || [];
_gaq.push([&#39;_setAccount&#39;, &#39;UA-xxxxxxx-x&#39;]);

//Async Snippet
(function () {
    var ga = document.createElement(&#39;script&#39;);
    ga.async = true;
    ga.src = (&#39;https:&#39; == document.location.protocol ? &#39;https://ssl&#39; : &#39;http://www&#39;) + &#39;.google-analytics.com/ga.js&#39;;
    var s = document.getElementsByTagName(&#39;script&#39;)[0];
    s.parentNode.insertBefore(ga, s);
})();

//Execute
$(&#39;[data-role=&#34;page&#34;]&#39;).live(&#39;pageshow&#39;, function () {
    var u = location.hash.replace(&#39;#&#39;, &#39;&#39;);
    u ? _gaq.push([&#39;_trackPageview&#39;, u]) : _gaq.push([&#39;_trackPageview&#39;]);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;jQuery Mobile XSS Problem&lt;/h2&gt;
ちなみに上記と関係ないですけど、jQuery Mobileのアルファ版使ってる人は直ちに最新版にアップデートしときましょうってお知らせ。

[blackbirdpie url=&#34;https://twitter.com/#!/bulkneets/status/83174006110437377&#34;]
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://hisasann.com/housetect/2011/06/jquerymobilexss.html&#34;&gt;jQueryMobileのXSSに関する調査メモ at HouseTect, JavaScriptな情報をあなたに &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
最後になりましたが、主催者の&lt;a href=&#34;https://twitter.com/#!/makitani&#34;&gt;@makitani&lt;/a&gt;さん、呼んでくださってありがとうございます。並びに素晴らしいユーザーMTGありがとうございます。
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 15px; top: 516px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=Tracking%20Snippet%0A&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 153px; top: 508px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=Tracking%20Snippet%0A&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 14px; top: 532px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=Tracking%20Snippet&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 102px; top: 513px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=Google%20A&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 34px; top: 511px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=oogle%20&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;div id=&#34;extensionsWeblioEjBx&#34; style=&#34;position: absolute; z-index: 2147483647; left: 259px; top: 514px; display: none;&#34;&gt;&lt;iframe frameborder=&#34;0&#34; height=&#34;205&#34; name=&#34;weblioExtensionsFrame&#34; scrolling=&#34;no&#34; src=&#34;http://api.weblio.jp/act/quote/v_1_0/e/?q=GATG%20for%20jQuery%20Mobile&amp;amp;type=elarge&amp;amp;opul=chrome-extension%3A%2F%2Foingodpdjohhkelnginmkagmkbplgema%2Foptions.html&#34; width=&#34;320&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>施策前後のCV率に有意差はあるのか？</title>
      <link>http://localhost:1313/mol/log/statistical-significance/</link>
      <pubDate>Tue, 01 Mar 2011 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/statistical-significance/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/joost-ijmuiden/4768350290/&#34;&gt;&lt;img class=&#34;fig&#34; title=&#34;Untitled&#34; src=&#34;/static/blog/2011/02/statics.jpg&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;260&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;&lt;span style=&#34;color: #888888;&#34;&gt;&lt;strong&gt;By &lt;a href=&#34;http://www.flickr.com/photos/joost-ijmuiden/&#34;&gt;Joost J. Bakker IJmuiden&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;はい、タイトルのとおりでございます。とある改善を行いまして、その効果というのが誤差の範疇なのか、それとも効果があったのか（プラスマイナス問わず）知りたい状況に陥りましたんで、いろいろ調べてみましたよというお話。&lt;/p&gt;

&lt;p&gt;Google Website Optimizer とか使えば、テストを実行してしばらくしたら勝手にこっちの方が何％優れてるよーって教えてくれるんですけど、今回のケースだと GWO の実装が難しかったので  Google Analytics で指標を読み取ることにしました。&lt;/p&gt;

&lt;p&gt;やりたいことはですね。手元にあるデータは施策前後の１週間毎のコンバージョン率（8週間分）がありますんで前後8週間の平均CV率を出して何％改善したのか確認したいわけです。で、今回の場合1%程度改善されたのですが、これって別になんにもしなくても1%上がっちゃったりするのか、それとも偶然ではない&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E6%9C%89%E6%84%8F&#34;&gt;&lt;strong&gt;有意&lt;/strong&gt;&lt;/a&gt;の差なのかってことを理解しようと思います。
&lt;table border=&#34;0&#34; width=&#34;470&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th style=&#34;background: #d9d9d9;&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;1w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;2w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;3w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;4w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;5w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;6w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;7w&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;8w&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #d7d6fe; text-align: right;&#34;&gt;Before&lt;/td&gt;
&lt;td&gt;93.82%&lt;/td&gt;
&lt;td&gt;93.83%&lt;/td&gt;
&lt;td&gt;93.23%&lt;/td&gt;
&lt;td&gt;93.65%&lt;/td&gt;
&lt;td&gt;93.99%&lt;/td&gt;
&lt;td&gt;93.65%&lt;/td&gt;
&lt;td&gt;93.95%&lt;/td&gt;
&lt;td&gt;94.37%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #ffbfdf; text-align: right;&#34;&gt;After&lt;/td&gt;
&lt;td&gt;94.73%&lt;/td&gt;
&lt;td&gt;94.77%&lt;/td&gt;
&lt;td&gt;94.18%&lt;/td&gt;
&lt;td&gt;94.71%&lt;/td&gt;
&lt;td&gt;94.99%&lt;/td&gt;
&lt;td&gt;94.76%&lt;/td&gt;
&lt;td&gt;94.45%&lt;/td&gt;
&lt;td&gt;94.59%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;span style=&#34;font-size: x-small;&#34;&gt;施策前後8週間のコンバージョン率の遷移&lt;/span&gt;
&lt;h3&gt;まずはじめに&lt;/h3&gt;
はい、大学で統計学の単位を取ったような気もしないわけでもないそうゆう気もしないわけでもないという感じなので、ほぼ統計的知識ゼロです。間違いなどあれば指摘してもらえると嬉しいです。&lt;/p&gt;

&lt;p&gt;手始めに「&lt;a href=&#34;http://www.google.co.jp/search?hl=ja&amp;amp;q=%E6%9C%89%E6%84%8F%E5%B7%AE&#34;&gt;有意差&lt;/a&gt;」とかでググッてみるのですが、出てくるリソース読んでもさっぱりΣ(´∀｀；)なので、というか数式とか見た瞬間拒絶反応がでてくるのでウォームアップがてらこの本読んでみました。
&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4274065707/warikiru-22/ref=nosim/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;fig&#34; src=&#34;http://ecx.images-amazon.com/images/I/51EFK1XNQ5L._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;マンガでわかる統計学&#34; width=&#34;124&#34; height=&#34;160&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;span&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%83%9E%E3%83%B3%E3%82%AC%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8B%E7%B5%B1%E8%A8%88%E5%AD%A6-%E9%AB%98%E6%A9%8B-%E4%BF%A1/dp/4274065707%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4274065707&#34; target=&#34;_blank&#34;&gt;マンガでわかる統計学&lt;/a&gt;&lt;img style=&#34;border: none;&#34; src=&#34;http://www.assoc-amazon.jp/e/ir?t=warikiru-22&amp;amp;l=ur2&amp;amp;o=9&#34; alt=&#34;&#34; width=&#34;1&#34; height=&#34;1&#34; /&gt;
高橋 信 トレンドプロ &lt;/span&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;オーム社  2004-07
売り上げランキング : 4991&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%83%9E%E3%83%B3%E3%82%AC%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8B%E7%B5%B1%E8%A8%88%E5%AD%A6-%E9%AB%98%E6%A9%8B-%E4%BF%A1/dp/4274065707%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4274065707&#34; target=&#34;_blank&#34;&gt;Amazonで詳しく見る&lt;/a&gt;&lt;/span&gt; &lt;span&gt;by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
ルイちゃん可愛いよ(;´Д｀)ﾊｧﾊｧってことで、文系の僕でも数時間で苦なく読めました（ちゃんと理解はしてないけど）。やっぱり僕みたいなトーシローが最初からガチな統計本 or ドキュメントに手を出すのは玉砕必死です。こうゆうので耐性をつけてから望んだ方が良かったです。&lt;/p&gt;

&lt;p&gt;はい、ということでもう一度トライしてみましょう。なんということでしょう。読める、読めるぞ！（ムスカ風）ってほどでもないけども、以前よりは頭に入っていきます。
&lt;h2&gt;有意差検定&lt;/h2&gt;
そうゆうことでググリマックってたらどうやら僕がしたいのはt検定という奴っぽいです。
&lt;blockquote&gt;2組の標本について平均に有意差があるかどうかの検定などに用いられる。
&lt;a href=&#34;http://ja.wikipedia.org/wiki/T%E6%A4%9C%E5%AE%9A&#34;&gt;t検定 - Wikipedia&lt;/a&gt;&lt;/blockquote&gt;
Yeah!これこれ！で、さらにググリマックってたらドンピシャなリソース発見！検索した中でも一番文系フレンドリーで分かりやすそうです（・(ｪ)・）
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://kogolab.jp/elearn/hamburger/chap4/sec3.html&#34;&gt;4.3　t検定 - ハンバーガー統計学&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
ここのサイトは本当に分かりやすいので、量もそんなには多くないので最初から全部読んでみるとよいと思います。
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://kogolab.jp/elearn/hamburger/&#34;&gt;ハンバーガー統計学にようこそ！&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
さてどうやら、t検定を行う前段階として以下の2点を調べておく必要性がありそうなので、まずはそこから始めましょう。
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;標本が正規分布に従うかどうか&lt;/strong&gt;&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;標本の分散が等しいかどうか&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Jarque-Bera 検定（標本が正規分布に従うかどうか）&lt;/h3&gt;
&lt;a href=&#34;http://ja.wikipedia.org/wiki/T%E6%A4%9C%E5%AE%9A#.E5.89.8D.E6.AE.B5.E9.9A.8E&#34;&gt;t検定の wikipedia&lt;/a&gt; には正規分布かどうか調べるためには、コルモゴロフ-スミルノフ検定やシャピロ-ウィルク検定使えばいいよと書いてあるけど、どれも難しくて（どうやって計算するのか）わからなかった。Jarque-Bera 検定ならなんとかできそうなので、この検定で調べてみる。&lt;/p&gt;

&lt;p&gt;とりあえず、正規分布というのは、&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;正規分布&lt;/strong&gt; - 平均を山の中心として左右になめらかに広がった「つりがね型」をした分布&lt;/p&gt;

&lt;p&gt;はい、数学の時間によく見たあれです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Jarque-Bera_test&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;Jarque-Bera_test&#34; src=&#34;http://upload.wikimedia.org/math/1/4/0/14084be9ee2c2a037f1cfbc4562cdba2.png&#34; alt=&#34;&#34; width=&#34;181&#34; height=&#34;48&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;n：標本数、S：歪度、K：尖度&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E6%AD%AA%E5%BA%A6&#34;&gt;&lt;strong&gt;歪度&lt;/strong&gt;&lt;/a&gt;（わいど, Skewness）- 分布の非対称性を示す指標
&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E5%B0%96%E5%BA%A6&#34;&gt;&lt;strong&gt;尖度&lt;/strong&gt;&lt;/a&gt;（せんど、Kurtosis）- 分布のとんがり具合を表す指標&lt;/p&gt;

&lt;p&gt;Jarque-Bera 検定の公式が上記になるんですけど、どうやらこのJBの値がだいたい6より小さければ、&lt;a href=&#34;http://okwave.jp/qa/q4076739.html&#34;&gt;有意水準が5％で正規分布と見做して構わないらしい&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;はい、いろいろ分かんないことだらけだけど、とりあえず数値だしてみるよ。
nは8週間分あるから、8。歪度はExeclのSKEW関数を使えば出てくるよ！尖度はExeclのKURT関数を使えば出てくるよ！
&lt;table border=&#34;0&#34; width=&#34;370&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th style=&#34;background: #d9d9d9;&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;n&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;S&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;K&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: center;&#34; scope=&#34;col&#34;&gt;JB&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #d7d6fe; text-align: right;&#34;&gt;Before&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;-0.118&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;1.4396&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;0.7094&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #ffbfdf; text-align: right;&#34;&gt;After&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;-0.864&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;1.2489&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;1.5145&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
で、計算結果するとでどちらも6以下でおｋ。これでどうやら正規分布として見なしてもよさそうですね。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;※ 尖度の定義
Jarque-Bera 検定の調べていると、（K-3）としている公式を見かけますがこれは尖度の定義による違いだそうです。wikipediaによると「E&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E5%B0%96%E5%BA%A6#2種類の定義&#34;&gt;xcelの分析ツール等は正規分布の尖度を0としている&lt;/a&gt;」らしいので、今回の場合は、-3する必要性はなさそうです。&lt;/span&gt;
&lt;h3&gt;F検定（標本の分散が等しいかどうか）&lt;/h3&gt;
よし、標本が正規分布だと分かった次は分散が等しいかどうかだ。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kusuri-jouhou.com/statistics/fkentei.html&#34;&gt;&lt;img title=&#34;F検定(等分散の検定) &#34; src=&#34;http://kusuri-jouhou.com/images/statistics/aa3.gif&#34; alt=&#34;&#34; width=&#34;460&#34; height=&#34;48&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;こういった感じのことを調べるんだね。ちなみに、分散というのは&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;分散&lt;/strong&gt; - データが平均値を中心にして、どのくらいばらついているのかを示した数値
&lt;span style=&#34;color: #000000; font-size: x-small;&#34;&gt; ※標準偏差（&lt;span style=&#34;color: #888888;&#34;&gt;Standard Deviation&lt;/span&gt;） ＝ 分散の平方根（ルート）&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E5%88%86%E6%95%A3#.E6.A8.99.E6.9C.AC.E5.88.86.E6.95.A3&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;s^2=\frac{1}{n}\sum_{i=1}^{n}(\bar{x}-x_i)^2&#34; src=&#34;http://upload.wikimedia.org/math/d/5/2/d52d28bc57dff2e28bfa2ae195f1bd37.png&#34; alt=&#34;&#34; width=&#34;160&#34; height=&#34;48&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;シグマが出てきてもうアカンΣ(´∀｀；)！ってなったかた大丈夫、数列の総和って意味だよ。要は、&lt;/p&gt;

&lt;p&gt;((データ－平均値)の２乗)の総和÷個数&lt;/p&gt;

&lt;p&gt;ってことを言ってるだね。今回は２つの標本（データ）があるので、それぞれ分散を求める。分散はExeclのVARP関数を使えば出てくるよ！&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/F-test_of_equality_of_variances&#34;&gt;&lt;img class=&#34;alignnone&#34; title=&#34;F-test&#34; src=&#34;http://upload.wikimedia.org/math/1/a/f/1afdd4bd258e9b84c2a42d1a8f195c2e.png&#34; alt=&#34;&#34; width=&#34;70&#34; height=&#34;48&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;分子に大きい方の値を当てはめて、F値を出しましょう。
&lt;table border=&#34;0&#34; width=&#34;200&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: right;&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;background: #d9d9d9; text-align: right;&#34;&gt;S&lt;sup&gt;2&lt;/sup&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #d7d6fe; text-align: right;&#34;&gt;Before&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;0.09&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background: #ffbfdf; text-align: right;&#34;&gt;After&lt;/td&gt;
&lt;td style=&#34;text-align: right;&#34;&gt;0.05&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
F値は0.09/0.05の1.8になります。&lt;/p&gt;

&lt;p&gt;あとは以下の公式に当てはめていくと,,,
&lt;blockquote&gt;自由度は分子の自由度df1＝n1-1、分母の自由度df2＝n2-1のF分布に従う。自由度が求まったら&lt;a href=&#34;http://kusuri-jouhou.com/statistics/bunpuhyou.html&#34;&gt;F分布表&lt;/a&gt;からFαを求めることができる。&lt;/p&gt;

&lt;p&gt;・判定1≦F≦Fαのとき、P＞0.05となる→帰無仮説を棄却できない→等分散である。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://kusuri-jouhou.com/statistics/fkentei.html&#34;&gt;F検定(等分散の検定) &lt;/a&gt;&lt;/blockquote&gt;
df1, df2の自由度はどちらも8-1で、7となり、F分布表より、7×7の場所は3.79となり、&lt;/p&gt;

&lt;p&gt;1≦1.8≦3.79 が成り立つ、つまり等分散と言えることができます。
&lt;h3&gt;t検定（Student&amp;rsquo;s t-test）&lt;/h3&gt;
２つの標本は正規分布に従い、等分散と言えるのでようやくt検定としけこみたいところですが、もう一つだけ確認しておきたいことがあります。
&lt;h4&gt;対応の有無&lt;/h4&gt;
標本の対応の有無というのは、2つの独立した母集団から標本を選んでくるのか、1つの母集団から標本を選んでくるのかということです。今回の場合、施策したサイトのユーザーの期間比較ですので、施策前後で同じユーザーというのは可能性が低いので、対応はないと判断しました。
&lt;h4&gt;対応のないt検定&lt;/h4&gt;
ようやく、ほんとようやくです。ここまできたらあとは以下の資料を元に進めてくだけです。
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;http://kogolab.jp/elearn/hamburger/chap4/sec3.html&#34;&gt;4.3　t検定 - ハンバーガー統計学&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
流れは以下のとおりですがな。
&lt;ol&gt;
    &lt;li&gt;帰無仮説を立てる&lt;/li&gt;
    &lt;li&gt;帰無仮説の否定である対立仮説を立てる&lt;/li&gt;
    &lt;li&gt;有意水準を決める&lt;/li&gt;
    &lt;li&gt;得られた標本を使って、指標tを計算する&lt;/li&gt;
    &lt;li&gt;標本の数から自由度を計算する&lt;/li&gt;
    &lt;li&gt;t分布表の該当する自由度を見て、tが棄却域にはいっている（棄却）か、いない（採択）かを判定する&lt;/li&gt;
    &lt;li&gt;結論を決める&lt;/li&gt;
&lt;/ol&gt;
&lt;strong&gt;1. 帰無仮説を立てる&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;帰無仮説というのは「差はない」という仮説らしいです。この場合、「施策前後で差はない」という仮説を立てます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. 対立仮説を立てる&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;帰無仮説とは反対の仮説であり、「施策前後で差がないとはいえない、つまり、差がある」という仮説を立てます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 有意水準を決める&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;どの程度の正確さをもって帰無仮説を棄却するのかという水準です。たいていは厳しくて1%、少し甘くて5%だそうなので、今回は5%とします。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 指標tを計算する&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;t＝（標本平均の差）／SQRT（（Aの不偏分散／Aの標本数）＋（Bの不偏分散／Bの標本数））&lt;/p&gt;

&lt;p&gt;これに当てはめていけばいいんだす！めんどくハンバーガー統計さんのとこにEXCELシートありますんで、そこに当てはめていけばでます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不偏分散&lt;/strong&gt; - 母分散の推定値 ＝（（データ－平均値）の二乗）の総和÷（個数-1）&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;※ SQRT関数は平方根（ルート）を求める関数です！&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;よって、t値は-5.78&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. 自由度を計算する&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;自由度＝（Aの標本数－1）＋（Bの標本数－1）＝Aの標本数＋Bの標本数－2&lt;/p&gt;

&lt;p&gt;A,Bも標本数8なので自由度は14です。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. 棄却か採択か&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;alignnone size-full wp-image-2532&#34; title=&#34;t&#34; src=&#34;/static/blog/2011/02/t.png&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;301&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. 結論を決める&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;自由度が14のとき、有意水準5% 2.145, 有意水準1% 2.977となります。これをt分布で表すと上記のようなグラフになります。今回の場合、t値は-5.78となり棄却域に入ります。&lt;/p&gt;

&lt;p&gt;よって、最初に立てた帰無仮説は棄却され、施策前後で差がないとはいえない、つまり、差があると言えます。&lt;/p&gt;

&lt;p&gt;はい、できたー！そらできたー！やたー！&lt;/p&gt;

&lt;p&gt;なんとかできたけど、細かいこと全然わかってないのでもう少し勉強しようと思いました(；´Д｀)
&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4478820090/warikiru-22/ref=nosim/&#34;&gt;&lt;img class=&#34;fig&#34; src=&#34;http://ecx.images-amazon.com/images/I/51-vAi68VSL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;完全独習 統計学入門&#34; width=&#34;113&#34; height=&#34;160&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;span&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E5%AE%8C%E5%85%A8%E7%8B%AC%E7%BF%92-%E7%B5%B1%E8%A8%88%E5%AD%A6%E5%85%A5%E9%96%80-%E5%B0%8F%E5%B3%B6-%E5%AF%9B%E4%B9%8B/dp/4478820090%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4478820090&#34; target=&#34;_top&#34;&gt;完全独習 統計学入門&lt;/a&gt;&lt;img style=&#34;border: none;&#34; src=&#34;http://www.assoc-amazon.jp/e/ir?t=warikiru-22&amp;amp;l=ur2&amp;amp;o=9&#34; alt=&#34;&#34; width=&#34;1&#34; height=&#34;1&#34; /&gt;
小島 寛之 &lt;/span&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;ダイヤモンド社  2006-09-29
売り上げランキング : 1395&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E5%AE%8C%E5%85%A8%E7%8B%AC%E7%BF%92-%E7%B5%B1%E8%A8%88%E5%AD%A6%E5%85%A5%E9%96%80-%E5%B0%8F%E5%B3%B6-%E5%AF%9B%E4%B9%8B/dp/4478820090%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4478820090&#34; target=&#34;_top&#34;&gt;Amazonで詳しく見る&lt;/a&gt;&lt;/span&gt; &lt;span&gt;by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
あ、有意な差があると言えると証明できたけど、それが今回行った施策によるものかっていう点はまた別問題なので気をつけてまし。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ModernizrでHTML5時代のWeb技術をトラッッキング</title>
      <link>http://localhost:1313/mol/log/trackhtml5inga-with-modernizr/</link>
      <pubDate>Thu, 02 Dec 2010 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/trackhtml5inga-with-modernizr/</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;&lt;strong&gt;&lt;a href=&#34;http://atnd.org/events/10497&#34;&gt;JavaScript Advent Calendar 2010 : ATND&lt;/a&gt;&lt;/strong&gt;
2010年12月1日から25日まで、毎日違う人が JavaScript にまつわるブログ記事を書く企画です。
参加表明した順番が日付（12月◯日）となります。&lt;/blockquote&gt;
こうゆうおもしろい催し事があるみたいなので僕からは便利なJSライブラリの紹介をばしたいと思います。
&lt;h3&gt;What is Modernizr?&lt;/h3&gt;
&lt;a href=&#34;http://www.flickr.com/photos/24374884@N08/5141958757/&#34;&gt;&lt;img class=&#34;alignleft size-full wp-image-2020&#34; title=&#34;newt&#34; src=&#34;/static/blog/2010/12/newt.jpg&#34; alt=&#34;&#34; width=&#34;151&#34; height=&#34;191&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;まずはタイトルにもある &lt;a href=&#34;http://www.modernizr.com/&#34;&gt;Modernizr &lt;/a&gt;ですが、これはHTML5時代のWeb技術、最近では「&lt;strong&gt;NEWT&lt;/strong&gt;」、New Exciting Web Technologies （HTML5、CSS3、SVG、XHR2、Geolocation&amp;hellip; などの技術総称）と呼ばれている技術がブラウザで実装されているか検出してくれるライブラリです。&lt;/p&gt;

&lt;p&gt;最近、開発者の&lt;a href=&#34;http://east.webdirections.org/2010/speaker/paul-irish/&#34;&gt;Paul Irishさんが来日&lt;/a&gt;してその存在を知りました（汗&lt;/p&gt;

&lt;p&gt;Modernizr を読み込んだページにアクセスすると自動的にHTML要素のclass属性に対応状況がこん感じで記述される具合です。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;firefox&#34; src=&#34;/static/blog/2010/12/firefox.png&#34; alt=&#34;&#34; width=&#34;402&#34; height=&#34;268&#34; /&gt;
&lt;em&gt;Firefox 3.6.12&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;chrome&#34; src=&#34;/static/blog/2010/12/chrome.png&#34; alt=&#34;&#34; width=&#34;403&#34; height=&#34;230&#34; /&gt;
&lt;em&gt;Google Chrome 7.0.517.44&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;opera&#34; src=&#34;/static/blog/2010/12/opera.png&#34; alt=&#34;&#34; width=&#34;403&#34; height=&#34;239&#34; /&gt;
&lt;em&gt;Opera 10.63&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;機能が実装されていばその機能名、実装されていなければno-が頭につく感じですね。おおもとのHTML要素にclass属性がついたので、
&lt;pre&gt;&lt;code&gt;.borderradius .hoge div {
 /* border-radiusのプロパティを記述 &lt;em&gt;/
}
.no-borderradius .hoge div {
 /&lt;/em&gt; border-radiusに対応していないから画像で再現する記述とか */
}&lt;/code&gt;&lt;/pre&gt;
こんな感じで子孫セレクタを使って実装状況に合わせたスタイルを記述することができます。
&lt;pre&gt;&lt;code&gt;if (Modernizr.localstorage){
  // localstorage 使う！使う！
} else {
  // 代替手段として Cookie 使ったりとか
}&lt;/code&gt;&lt;/pre&gt;
もちろんJavaScriptからもこんな感じで分岐処理することも可能です。
&lt;h3&gt;Track HTML5 in Google Analytics&lt;/h3&gt;
この非常に便利な Modernizr を利用して、Google Analytics のレポート上でも確認できるようにしてくれるのが &lt;a href=&#34;https://github.com/smeranda/trackHTML5inGA&#34;&gt;trackHTML5inGA &lt;/a&gt;です。Modernizr で検出したプロパティをカスタム変数（デフォルトではスロット#5を使用する）で取り込んで Google Analytics に渡す感じでしょうか。（&lt;a href=&#34;http://t32k.me/mol/2010/10/google-analytics-custom-variables-part1/&#34;&gt;カスタム変数についてはこちらを参照&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;使い方はModernizrとtrackHTML5inGA をダウンロードしてきて任意のサーバーにアップして以下のコードをGATC（Google Analytics Tracking Code）の後にでも挿入しておきましょう。（※非同期版トラッキングコードのみに対応）
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;ldquo;text/javascript&amp;rdquo;&amp;gt;
   // トッラッキングしたいプロパティを記述
   featuresToTrack = [&amp;lsquo;video&amp;rsquo;,&amp;lsquo;audio&amp;rsquo;];
   (function(d, t) {
     var s=d.createElement(t),x=d.getElementsByTagName(t)[0];
     s.async=1;s.src=&amp;lsquo;js/trackHTML5inGA.js&amp;rsquo;;
     x.parentNode.insertBefore(s,x);
   })(document, &amp;lsquo;script&amp;rsquo;);
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
上記のfeaturesToTrackの部分にトラッキングしたいプロパティ（40種類くらいトラッキングできるプロパティはあるけど、GAの仕様上、配列内に記述できる文字列は55byte以内に納めなければならない）を記述することで、GAのレポートの&lt;em&gt;ユーザー&lt;/em&gt; &amp;gt; &lt;em&gt;カスタム変数&lt;/em&gt; に &lt;em&gt;HTML5&lt;/em&gt; の項目できているのでクリックすると、任意のプロパティを実装しているブラウザのセッション数などがわかります。もちろん、コンバージョンを設定すれば、実装機能別の成果を確認することができます。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;customvar&#34; src=&#34;/static/blog/2010/12/customvar.png&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;352&#34; /&gt;
&lt;em&gt;上記の場合、borderradius/boxshadow/webworkers/applicationcache とborderradiusをトラッキング&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;これをうまく使えば、CSS3アニメーションを使ったバリバリインタラクティブ登録フォームを作成してその成果を確かめたり、application cacheを大いに活用すればパフォーマンス的に良くなるわけですからapplication cacheを実装していないセグメントと比べてどのくらい成果が違うかなど確認できるかなど使い方はあなた次第！&lt;/p&gt;

&lt;p&gt;単一のプロパティであれば、カスタムセグメントでブラウザのバージョンごとの実装状況を調べて自力でセグメント分けすればいいのですが、これが複数のプロパティ（ex. border-radiusかつCSS AnimationsかつGeolocation APIを実装しているブラウザとか）を対象とするとややこしくなるので、やはりそういう点ではこのtrackHTML5inGAを使うメリットがあるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;そういうわけで、Modernizr と trackHTML5inGA の紹介でした。
&lt;h3&gt;宣伝&lt;/h3&gt;
さて、なんか後半はアクセス解析っぽい話になっちゃいましたけど、よかったのかな&amp;hellip;と。心配ついでにせっかくJS大好きっ子が見てると思うのでkanazawa.jsの宣伝もしとこ。&lt;/p&gt;

&lt;p&gt;kanazawa.js は金沢市、石川県、北陸の近辺の JavaScript デザイナー・プログラマによるコミュニティです。月1で勉強会を開いていくつもりなので、近くに寄ったときはぜひ参加してください！&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&#34;http://kanazawajs.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&#34;http://twitter.com/kanazawajs&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&#34;http://www.facebook.com/pages/kanazawajs/109048162494785&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&#34;http://www.ustream.tv/channel/kanazawajs&#34;&gt;Ustream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Google Analytics (not set) エントリの異常増加</title>
      <link>http://localhost:1313/mol/log/ga-not-set/</link>
      <pubDate>Thu, 30 Sep 2010 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/ga-not-set/</guid>
      <description>&lt;p&gt;最近、&lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;ユーザー&lt;/span&gt;&lt;/strong&gt; &amp;gt; &lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;PC環境&lt;/span&gt;&lt;/strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt; &lt;/span&gt;&amp;gt; &lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;画面の解像度&lt;/span&gt;&lt;/strong&gt; のメニューにおいて、 (not set) エントリが異常に多いことを同僚から指摘されました。調べてみると、一部のプロファイルでそのような現象を確認することが出来ました。&lt;/p&gt;

&lt;p&gt;Google Analytics で (not set)  と言えば、&lt;a href=&#34;http://analytics-ja.blogspot.com/2010/02/not-set-entries.html&#34;&gt;キャンペーントラッキングでのキーワード&lt;/a&gt;問題が有名ですね。キーワードが取れていないから (not set) であるので、&lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;画面の解像度&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;においても解像度が取れてないのだろうと考えましたが、全体の中で10％も (not set) というのは、ちょっとどうゆう状況なのか考えらませんでした。数件、数十件であれば、トラッキングコード実行時になんらかのエラーがあって取れないということも考えられるでしょうが、今回の場合は多すぎます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2010/09/screenresolution.png&#34;&gt;&lt;img class=&#34;alignnone size-full wp-image-1701&#34; title=&#34;Screen Resolution&#34; src=&#34;/static/blog/2010/09/screenresolution.png&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;379&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そこで、年次スパンで (not set) エントリの推移を見てみますと、どうやら5/3から急激に増加しているのが分かります。ということで、該当の期間にトラッキングコード、フィルタの変更を行ったかといえば、それも思い当たるふしがありません。&lt;/p&gt;

&lt;p&gt;ということで、他のGAユーザーも同じ問題になっていないのか検索してみました。たいていは、&lt;a href=&#34;http://www.comedywaltz.com/search/a2iforum/&#34;&gt;アクセス解析Q＆Aフォーラム&lt;/a&gt;を調べれば分かるのですが、分からないこともあります。&lt;/p&gt;

&lt;p&gt;そんなときは、&lt;a href=&#34;http://www.google.com/support/forum/p/Google+Analytics?hl=en&#34;&gt;Google Analytics  Help forum&lt;/a&gt; のほうを検索してみましょう。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.google.com/support/forum/p/Google+Analytics/thread?tid=1f5631b2c79a2bf5&amp;amp;hl=en&#34;&gt;Huge increase in Screen Resolution/Colors of (Not Set) - Google Analytics Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
検索してみると、どうやら上記の質問と似ているように思えます。時期的にも同じだし、症状も似ている。この人は &lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;画面の解像度&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;だけでなく、&lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;画面の色&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;でも (not set) エントリが出ているみたい。そこで、自分のプロファイルを再度確認したところ、&lt;strong&gt;&lt;span style=&#34;color: #888888;&#34;&gt;画面の色&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt; &lt;/strong&gt;においても同じ現象が確認できました。その他にも(not set)  エントリの異常増加は、自分のプロファイルでは、下記メニューで確認できました。
&lt;ul&gt;
    &lt;li&gt;画面の解像度　（Screen Resolutions）&lt;/li&gt;
    &lt;li&gt;画面の色　（Screen Colors）&lt;/li&gt;
    &lt;li&gt;フラッシュのバージョン　(Flash Versions）&lt;/li&gt;
    &lt;li&gt;言語　（Languages）&lt;/li&gt;
    &lt;li&gt;ホスト名 （Hostnames） &lt;span style=&#34;color: #888888;&#34;&gt;※これは増加ではなく急激な減少でした。&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
そんわけでいろいろ調べた結果、なんかGA自体のバグくさいので、今回はGooogle さんに問い合わせてみようと思いました。実はちゃんとGoogle Analytics のお問い合わせフォームが存在してまして、調べてみてどうしてもわからない場合は問い合わせてみるのも良いでしょう。（要：AdWordsアカウント）
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;https://www.google.com/support/googleanalytics/bin/request.py?cf_question=qc_5_1&#34;&gt;https://www.google.com/support/googleanalytics/bin/request.py?cf_question=qc_5_1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
問い合わせた結果、この問題について既に認識しており、現在、エンジニアが問題の解決に向けて鋭意対応中ではあるが、改善時期は未定とのことです。&lt;/p&gt;

&lt;p&gt;Google Analyticsでは、以前にも&lt;a href=&#34;http://blog.livedoor.jp/seo24/archives/1672067.html&#34;&gt;ナビゲーション サマリーにおいて離脱数が0%になるバグ&lt;/a&gt;が発生していました。（現在は修正済）　そういったバグは他にもあるかもしれませんので、こういった問題は僕らにはどうしようもできないことです。つまり、何を言いたいかと言いますと、バグ見つけたら記事にしてGoogleに問い合わせて共有しようぜってことです。3人よれば文殊の知恵ですがな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Analytics 非同期トラッキングコード再考</title>
      <link>http://localhost:1313/mol/log/asynchronous-tracking/</link>
      <pubDate>Fri, 28 May 2010 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/asynchronous-tracking/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.flickr.com/photos/subharnab/3779676969/&#34;&gt;&lt;img src=&#34;/static/blog/2010/05/a.jpg&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;290&#34; /&gt;&lt;/a&gt;
&lt;span style=&#34;color: #888888;&#34;&gt;&lt;em&gt;by Subharnab&lt;/em&gt;&lt;/span&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://analytics-ja.blogspot.com/2010/05/growing-google-analytics-ecosystem.html&#34;&gt;Analytics 日本版 公式ブログ: 成長し続ける Google Analytics のエコシステム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
非同期トラッキングコードが公式に推奨されるようになったので、ようやく重い腰を上げて調べてみた。長文です。。。&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;目次&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#section01&#34;&gt;なぜ、非同期トラッキングコードが推奨されるのか？&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#section02&#34;&gt;読み込み時間の高速化 &lt;/a&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#section21&#34;&gt;async属性に関して&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#section03&#34;&gt;データの収集・精度の向上 &lt;/a&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#section31&#34;&gt;トラッキングコードは&amp;lt;/head&amp;gt;の直前、&amp;lt;body&amp;gt;の直後？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#section04&#34;&gt;依存性からくるエラーの除去&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#section05&#34;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;section01&#34;&gt;なぜ、非同期トラッキングコードが推奨されるのか？&lt;/h3&gt;
今回のトラッキングコードはurcin.js、ga.jsに続く大きな変更となります。非同期トラッキングコードの恩恵を受けるためには、以前のトラッキングコードを使用されている方は、当然変更しなければなりません。しかし、大規模サイトの場合などはアクセス解析担当者とコード実装者は違うことも多く、エンジニアさんにお願いしなければなりません。「え〜、前変えたばっかじゃん！」などと言われるかもしれません。。。そんな時にアクセス解析担当者はトラッキングコード変更のメリットを提示しなければなりませんね。&lt;/p&gt;

&lt;p&gt;Analytics 公式ブログでは、非同期トラッキングコードの利点を以下のように説明しています。
&lt;ul&gt;
&lt;blockquote&gt;
    &lt;li&gt;ブラウザの実行順序改善によるページの読み込み時間高速化&lt;/li&gt;
    &lt;li&gt;データの収集・精度の向上&lt;/li&gt;
    &lt;li&gt;JavaScriptが完全に読み込まれていなかったときの依存性からくるエラーの除去&lt;/li&gt;
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;http://analytics.blogspot.com/2009/12/google-analytics-launches-asynchronous.html&#34;&gt;Google Analytics Blog: Google Analytics launches async&amp;hellip;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/ul&gt;
てな感じで3つ挙げられているので、ひとつひとつ確認していきましょう。
&lt;h3 id=&#34;section02&#34;&gt;読み込み時間の高速化&lt;/h3&gt;
これが、非同期トラッキングコード最大の利点なのではないでしょうか。やはり、&lt;a href=&#34;http://t32k.me/mol/2010/04/using-site-speed-in-web-search-ranking/&#34;&gt;Googleのランキングアルゴリズムに読み込む速度が加わった&lt;/a&gt;手前、自社サービスがボトルネックとなっていては示しがつきませんしね。&lt;/p&gt;

&lt;p&gt;非同期トラッキングコードについて説明していくのですが、まず前提知識としてページの読み込まれ方について解説します。HTTP/1.1の仕様に「ひとつのホスト名（EX: www.t32k.com, img.t32k.comなど）に対して並列ダウンロードできるコンポーネントは数は2つまで」と制限されています。（実際のブラウザ実装は6つとかだけど、IE6,7は2つまで）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2010/05/1.png&#34;&gt;&lt;img class=&#34;fig&#34; title=&#34;1&#34; src=&#34;/static/blog/2010/05/1.png&#34; alt=&#34;&#34; width=&#34;460&#34; height=&#34;110&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;上記のグラフは簡単なモデルですが、すべて同じホスト名から読み込んでいます。まず、htmlファイルが読み込まれ、画像などのコンポーネントが2個ずつ読み込まれていきます。&lt;/p&gt;

&lt;p&gt;このとき、同じホスト名から読み込んでいる外部JavaScriptファイルがページの先頭で読み込まれていた場合はどうなるでしょうか？それを表したのが次のグラフです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2010/05/2.png&#34;&gt;&lt;img class=&#34;fig&#34; title=&#34;2&#34; src=&#34;/static/blog/2010/05/2.png&#34; alt=&#34;&#34; width=&#34;460&#34; height=&#34;110&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;どうでしょうか。仕様どおりなら「script + img」と並列に読み込まれるはずですが、そうはならずにscriptファイルひとつしか読み込まれていません。つまり、scriptファイルを最初に読み込むでしまうとダウンロード・レンダリングが止まってしまいます。そのため、&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/487311361X/warikiru-22/ref=nosim/&#34;&gt;ハイパフォーマンスWebサイト、高速サイトの実現のための14のルール&lt;/a&gt;のひとつ「ルール6：スクリプトは最後に置く」というものがあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2010/05/3.png&#34;&gt;&lt;img class=&#34;fig&#34; title=&#34;3&#34; src=&#34;/static/blog/2010/05/3.png&#34; alt=&#34;&#34; width=&#34;460&#34; height=&#34;110&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このような理由から、非同期以前のトラッキングコードは&amp;lt;/body&amp;gt;の直前に置くことが推奨されています。出来る限りページ最下部に置くことでダウンロード・レンダリングを止めないようにしています。上記のグラフのような感じですね。ページを表示するために必要なコンポーネントはscriptの手前ですべて読み込まれているのでこれが最善策なのかなと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;/static/blog/2010/05/4.png&#34;&gt;&lt;img class=&#34;fig&#34; title=&#34;4&#34; src=&#34;/static/blog/2010/05/4.png&#34; alt=&#34;&#34; width=&#34;460&#34; height=&#34;110&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;しかし、非同期トラッキングコードはダウンロードの中断を考えなくてもいいので上記のようなグラフになります。なおかつ、Google Analyticsの解析コードga.jsは、www.google-analytics.comから読み込まれていますので、トラッキングコードを挿入したページを読み出すホスト名とは異なるはずなので、ページのレンダリングとは非同期に読む込むことができます。
&lt;h4 id=&#34;section21&#34;&gt;async属性に関して&lt;/h4&gt;
&lt;pre&gt;ga.type = &amp;lsquo;text/javascript&amp;rsquo;; ga.async = true;&lt;/pre&gt;
話はちょっと変わりますが、非同期トラッキングコードについて調べていると、HTML5で定義されている&lt;a href=&#34;http://www.whatwg.org/specs/web-apps/current-work/#attr-script-async&#34;&gt;async属性&lt;/a&gt;によってこの非同期を実現しているのでasync属性に対応しているFx3.6しか効果がないと書いている人がちらほらいたのですが、それは誤解です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E7%B6%9A%E3%83%BB%E3%83%8F%E3%82%A4%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9Web%E3%82%B5%E3%82%A4%E3%83%88-%E2%80%95%E3%82%A6%E3%82%A7%E3%83%96%E9%AB%98%E9%80%9F%E5%8C%96%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9-Steve-Souders/dp/4873114462%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873114462&#34;&gt;続・ハイパフォーマンスWebサイト&lt;/a&gt;では、async属性を使わなくてもブラウザの実行をブロックしないスクリプトの読み込みテクニックとして以下の6つを挙げています。
&lt;ul&gt;
    &lt;li&gt;XHR eval&lt;/li&gt;
    &lt;li&gt;XHR インジェクション&lt;/li&gt;
    &lt;li&gt;iframe スクリプト&lt;/li&gt;
    &lt;li&gt;Script DOM要素&lt;/li&gt;
    &lt;li&gt;Script Defer&lt;/li&gt;
    &lt;li&gt;document.writeによるSCRIPTタグ書き出し&lt;/li&gt;
&lt;/ul&gt;
今回の非同期トラッキングコードではSCRIPT要素をDOMを使って生成することで実現しています。なので、ほとんどのブラウザで非同期で読み込むことが可能です。async属性を記述しているのは明示的に非同期で読み込むことをブラウザに通知するためとGoogle Code Blogには書いてあります。
&lt;blockquote&gt;
&lt;p style=&#34;text-align: left;&#34;&gt;HTML5 &amp;ldquo;async&amp;rdquo; attribute in this part of the snippet. While it creates  the same effect as adding a &amp;lt;script&amp;gt; element to the DOM, it  officially tells browsers that this script can be loaded asynchronously.&lt;/p&gt;
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;http://googlecode.blogspot.com/2009/12/google-analytics-launches-asynchronous.html&#34;&gt;Google Code Blog: Google Analytics Launches Async&amp;hellip;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
まぁ、実際のところどうなん？って感じなので、&lt;a href=&#34;http://t32k.me/mol/2010/04/httpwatch/&#34;&gt;HTTPWatch&lt;/a&gt;(IE6で検証)で、とあるサイトの非同期トラッキングコードの実装の前後を計測したのが以下のウォーターフォールチャートです。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;5&#34; src=&#34;/static/blog/2010/05/5.png&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;227&#34; /&gt;
&lt;em&gt;&lt;span style=&#34;color: #888888;&#34;&gt;&amp;lt;/body&amp;gt;直前に挿入したスタンダードトラッキングコードのチャート&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; title=&#34;6&#34; src=&#34;/static/blog/2010/05/6.png&#34; alt=&#34;&#34; width=&#34;470&#34; height=&#34;226&#34; /&gt;
&lt;span style=&#34;color: #888888;&#34;&gt;&lt;em&gt;&amp;lt;/head&amp;gt;直前に挿入した非同期トラッキングコードのチャート&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;各コンポーネントの読み込み時間のブレもありますが、おおかた上記チャート図のような読み込まれ方をしています。灰色で強調されている部分がga.jsです。最初のチャート図は以前のように非同期ではないトラッキングコードで読み込んでいますので、ページの表示に必要なコンポーネントをすべて読み込んでからga.jsを読み込み、GIFリクエスト（最後のコンポーネント）をしています。&lt;/p&gt;

&lt;p&gt;これが次の非同期トラッキングコードのチャートですと、コンポーネントのダウンロードをブロックしないので早い段階で読み込むことができ、GIFリクエスト（最後のコンポーネント）もページのレンダリングの前に完了しています。結果、ページ全体の読み込み時間は短くなっていますね。（上記の例だと200msぐらい）
&lt;h3 id=&#34;section03&#34;&gt;データの収集・精度の向上&lt;/h3&gt;
パフォーマンス面の理由から最下部にしか置けなかったトラッキングコードですが、非同期で読み込むことができるようになったので、ページの上部におけるようになりました。つまり、それだけGoogle Analyticsを作動させるタイミングを早くすることができます。以前まではページが完全に読み込まれない状態でページ遷移した場合などは記録されないってことも想定されましたがその可能性が低くなったということです。
&lt;h4 id=&#34;section31&#34;&gt;トラッキングコードは&amp;lt;/head&amp;gt;の直前、&amp;lt;body&amp;gt;の直後？&lt;/h4&gt;
パフォーマンスを気にすることなく、トラッキングコードは上部に置けるようになったのですが、これどこに置いたらよいの？と疑問があります。ところが、ヘルプの記事や管理画面の注意文によって言っていることがブレていて困りものです。
&lt;blockquote&gt;headセクションの最後ではなくてbodyセクションの最初です。
調べた限りでは、headセクションに記述するとIE6ではJavascriptの動きに問題が発生することがあるようです。
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;http://www.suzukikenichi.com/blog/google-analytics-asynchronous-tracking-is-now-default/&#34;&gt;Google  Analytics非同期トラッキングが標準設定に | 海外SEO情報ブ&amp;hellip;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
上記のブログではbodyセクションの最初って言ってますけど、それよりも何も「&lt;strong&gt;問題&lt;/strong&gt;」ってなによ？って感じで気になったので調べてみました。それを問題にしているところの出典が明記されていないので、よくわかりませんが、たぶんこれが問題じゃないのかなと。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.google.com/support/forum/p/Google+Analytics/thread?tid=5532c8dff3e8aa42&amp;amp;hl=en&#34;&gt;Async snippet causes IE6 to close with &amp;ldquo;operation aborted&amp;rdquo; - Google Analytics Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
IE6でなんかパーシングエラーになるそうです。その解決策としてBest Answerになってるのが、BASE要素をホゲホゲするか、HEAD要素に置いたトラキッングコードをBODY要素に置けばいいぜ！って書いてあります。うん、これっぽい。&lt;/p&gt;

&lt;p&gt;んで、これ調べてると他にも関係ありそうな記事を見つけたので紹介。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.stevesouders.com/blog/2010/05/11/appendchild-vs-insertbefore/&#34;&gt;High Performance Web Sites :: appendChild vs insertBefore &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
GoogleでWebパフォーマンスのエバンジェリストしている&lt;a href=&#34;http://twitter.com/souders&#34;&gt;Steve Souders&lt;/a&gt;さんのブログ記事なんですが、Google Analyticsの非同期トラッキングコードの変遷について解説しています。
&lt;pre&gt;var ga = document.createElement(&amp;lsquo;script&amp;rsquo;);
ga.src = (&amp;lsquo;https:&amp;rsquo; == document.location.protocol ?
    &amp;lsquo;&lt;a href=&#34;https://ssl&#39;&#34;&gt;https://ssl&#39;&lt;/a&gt; : &amp;lsquo;&lt;a href=&#34;http://www&#39;)&#34;&gt;http://www&#39;)&lt;/a&gt; + &amp;lsquo;.google-analytics.com/ga.js&amp;rsquo;;
ga.setAttribute(&amp;lsquo;async&amp;rsquo;, &amp;lsquo;true&amp;rsquo;);
document.documentElement.firstChild.appendChild(ga);&lt;/p&gt;

&lt;h2 id=&#34;span-style-color-888888-2009年12月段階のベータ版のトラッキングコード-span-pre:f5cce2aad775cd42e0dafb9243c18a90&#34;&gt;&lt;span style=&#34;color: #888888;&#34;&gt;//2009年12月段階のベータ版のトラッキングコード&lt;/span&gt;&lt;/pre&gt;&lt;/h2&gt;

&lt;p&gt;&lt;pre&gt;var ga = document.createElement(&amp;lsquo;script&amp;rsquo;);
ga.type = &amp;lsquo;text/javascript&amp;rsquo;; ga.async = true;
ga.src = (&amp;lsquo;https:&amp;rsquo; == document.location.protocol ?
    &amp;lsquo;&lt;a href=&#34;https://ssl&#39;&#34;&gt;https://ssl&#39;&lt;/a&gt; : &amp;lsquo;&lt;a href=&#34;http://www&#39;)&#34;&gt;http://www&#39;)&lt;/a&gt; + &amp;lsquo;.google-analytics.com/ga.js&amp;rsquo;;
var s = document.getElementsByTagName(&amp;lsquo;script&amp;rsquo;)[0];
s.parentNode.insertBefore(ga, s);
&lt;span style=&#34;color: #888888;&#34;&gt;//2010年の2月の段階のトラッキングコード&lt;/span&gt;&lt;/pre&gt;
どこが変わったのですかね。。。まぁちょいちょい微妙に違うのですが、ここでもっとも重要な変更点はSCRIPT要素をDOMで生成した後、ページに挿入するメソッドを、appendChildからinsertBeforeに変更した点です。&lt;/p&gt;

&lt;p&gt;なんでこんなことをしたのかとSteve Souders考えるにjQueryで同じような問題があったので参考にしたのではないかと。
&lt;blockquote&gt;head = document.getElementsByTagName (&amp;ldquo;head&amp;rdquo;)[0] ||
document.documentElement;
&lt;span style=&#34;color: #888888;&#34;&gt;// Use insertBefore instead of appendChild to circumvent an IE6 bug.
// This arises when a base node is used (&lt;a href=&#34;http://dev.jquery.com/ticket/2709&#34;&gt;#2709 &lt;/a&gt;and &lt;a href=&#34;http://dev.jquery.com/ticket/4378&#34;&gt;#4378&lt;/a&gt;).&lt;/span&gt;
head.insertBefore(script, head.firstChild);&lt;/blockquote&gt;
この#2709の問題ってGoogle Analyticsヘルプでの問題と同じじゃね？つまり、insertBeforeメソッドにすることでIE6のバグは治ったのではないかと僕は推測しました。&lt;/p&gt;

&lt;p&gt;んで、もうちょっと調べてみると、ドンピシャな質問がヘルプフォーラムで投げられていました。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.google.com/support/forum/p/Google+Analytics/thread?tid=4e634e0982427593&amp;amp;hl=en&#34;&gt;Where should Asynchronous code be placed as seen instruction for 2 different places - Google Analytics Help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Q. &lt;/strong&gt;ヘルプの各記事で&amp;lt;/head&amp;gt;の直前、&amp;lt;body&amp;gt;の直後とトラッキングコードの挿入位置が違ってるけど、どっちやねん？&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A. &lt;/strong&gt;旧バージョンは&amp;lt;body&amp;gt;の直後に置くことでバグ回避してたけど、最新バージョンだったらその問題も起きないねん。ヘルプは今直してるとこやさかい、堪忍して。だから、位置は別にどっちでもええで。&lt;/p&gt;

&lt;p&gt;みたいなやりとりですね。2010/5/20の回答なのでこれが最新の情報かな。あれ？答え出た？って感じなんですけど、まだ信用できません。このBest answerのBrian Kuhnって誰？と思ったので調べて見ますと、&lt;a href=&#34;http://twitter.com/briankuhn&#34;&gt;Twitterで発見&lt;/a&gt;。ga.js作ってるGoogleのエンジニアさんじゃないっすか！てか、&lt;a href=&#34;http://googlecode.blogspot.com/2009/12/google-analytics-launches-asynchronous.html&#34;&gt;非同期トラッキングコードリリースの公式ブログ&lt;/a&gt;書いてるのこの人じゃないっすか！つか、Twitterでも同じような質問されてるじゃないっすか！
&lt;blockquote&gt;
&lt;p style=&#34;text-align: left;&#34;&gt;@tgwilson @BigBryC - Nothing changed. There&amp;rsquo;s just a couple lingering pages with the old instructions. We&amp;rsquo;re fixing them. Head is preferred.&lt;/p&gt;
&lt;p style=&#34;text-align: right;&#34;&gt;&lt;a href=&#34;http://twitter.com/briankuhn/status/14340466143&#34;&gt;http://twitter.com/briankuhn/status/14340466143&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
Brian&amp;hellip; あなたにもっと早く出会えていれば&amp;hellip;.&lt;/p&gt;

&lt;p&gt;まぁ、そんなわけで、BODY要素に置かなければならない理由としてのIE6バグはフィックスされている。んで、非同期なのでどこにコードを置いても大丈夫だけど、HEAD要素に置くのが慣例的だし、Brianさんも好みだそうです。データの収集・精度を考えると少しでも上部に置くほうがベター（&amp;lt;/head&amp;gt;の直前と&amp;lt;body&amp;gt;の直後じゃ、あんまかわらんけどｗ）なんで&amp;lt;/head&amp;gt;の直前で良いのかなと僕は結論づけしました。&lt;/p&gt;

&lt;p&gt;それにしても、ヘルプの記事とか修正したら月日記入して欲しいね。。。どっちが最新か分からない＞＜
&lt;h3 id=&#34;section04&#34;&gt;依存性からくるエラーの除去&lt;/h3&gt;
これまで見てきて非同期ってワンダホー♪って思うのですが、そもそもなぜスクリプトファイルが読み込まれると並列ダウンロードがブロックされるのでしょうか？その理由として、開発者としては上部に置いたコードが先に実行されるという前提の上で実装をしています。もし、A.js、B.jsの順番でHTMLファイル内に読み込んで、非同期のためにB.jsの方が早く読み込みが完了されちゃったとします。B.jsの中にはA.jsで定義されたオブジェクトなど使われているので、当然未定義になってエラーが返される、なんてことが考えられます。例えるなら、jquery.js読み込む前に、jquery-plugin.jsが読み込まれては問題なわけですよ。&lt;/p&gt;

&lt;p&gt;なので、非同期で読み込む場合はコードの実行順序を考慮する必要性があります。Google Analyticsの非同期トラッキングコードでは、前半部分がそれに対応した部分になっています。
&lt;pre id=&#34;line17&#34;&gt;  var _gaq = _gaq || [];
  _gaq.push([&amp;rsquo;_setAccount&amp;rsquo;, &amp;lsquo;UA-XXXXX-X&amp;rsquo;]);
  _gaq.push([&amp;rsquo;_trackPageview&amp;rsquo;]);&lt;/pre&gt;
JavaScriptを嗜む程度の自分なのであまり詳しくないですが、このコードを初めて見たとき、なんか見慣れないなと思いました。なんでこうゆう書き方をしているのかなと。&lt;a href=&#34;http://googlecode.blogspot.com/2009/12/google-analytics-launches-asynchronous.html&#34;&gt;Google Code Blog&lt;/a&gt;を読む分には、ga.jsが読み込まれていない状態でvar _gaqにはただの配列が代入されて、そのコマンドが配列中に記録されてキュー待ち状態になる。んで、ga.jsが読み込まれると_gaqはオブジェクトになってキュー待ちのコマンドを実行していくという感じです。&lt;/p&gt;

&lt;p&gt;まぁ、よく分かりませんが、とりあえず、コードの実行順序を維持するためにこのような書き方になったということが理解できて良かったです。ということで、ga.jsが読み込まれなかったとしてもただの配列の中に蓄えられるだけなのでエラーになる可能性が低くなったということです。
&lt;h3 id=&#34;section05&#34;&gt;まとめ&lt;/h3&gt;
というわけで、非同期トラッキングコードについて、Webデザイナーの自分が背伸びをして調べたわけですが、ほんっと&lt;a href=&#34;http://twitter.com/t32k/status/14137281670&#34;&gt;【急募】アクセス解析エンジニア&lt;/a&gt;って感じました。だって分かんないもん、JavaScript＞＜　先日の&lt;a href=&#34;http://togetter.com/li/23955&#34;&gt;a2isummit&lt;/a&gt;でも
&lt;h4&gt;「マーケッターに技術を、技術者にマーケティングを」&lt;/h4&gt;
と言われていたように、互いの領域について知る必要性があるのかなとひしひし感じています。いやほんと、アクセス解析エンジニアはいいポジションだと思う。絶対チヤホヤされるよｗ
&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/487311361X/warikiru-22/ref=nosim/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;fig&#34; src=&#34;http://ecx.images-amazon.com/images/I/51hIDIWHmYL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;ハイパフォーマンスWebサイト ―高速サイトを実現する14のルール&#34; width=&#34;125&#34; height=&#34;160&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%83%8F%E3%82%A4%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9Web%E3%82%B5%E3%82%A4%E3%83%88-%E2%80%95%E9%AB%98%E9%80%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B14%E3%81%AE%E3%83%AB%E3%83%BC%E3%83%AB-Steve-Souders/dp/487311361X%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D487311361X&#34; target=&#34;_blank&#34;&gt;ハイパフォーマンスWebサイト ―高速サイトを実現する14のルール&lt;/a&gt;&lt;img style=&#34;border: none;&#34; src=&#34;http://www.assoc-amazon.jp/e/ir?t=warikiru-22&amp;amp;l=ur2&amp;amp;o=9&#34; alt=&#34;&#34; width=&#34;1&#34; height=&#34;1&#34; /&gt;
武舎 広幸&lt;/p&gt;

&lt;p&gt;オライリージャパン  2008-04-11
売り上げランキング : 14801
おすすめ平均  &lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-5.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%83%8F%E3%82%A4%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9Web%E3%82%B5%E3%82%A4%E3%83%88-%E2%80%95%E9%AB%98%E9%80%9F%E3%82%B5%E3%82%A4%E3%83%88%E3%82%92%E5%AE%9F%E7%8F%BE%E3%81%99%E3%82%8B14%E3%81%AE%E3%83%AB%E3%83%BC%E3%83%AB-Steve-Souders/dp/487311361X%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D487311361X&#34; target=&#34;_blank&#34;&gt;Amazonで詳しく見る&lt;/a&gt; by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873114462/warikiru-22/ref=nosim/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;fig&#34; src=&#34;http://ecx.images-amazon.com/images/I/51apDotzVxL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;続・ハイパフォーマンスWebサイト ―ウェブ高速化のベストプラクティス&#34; width=&#34;125&#34; height=&#34;160&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E7%B6%9A%E3%83%BB%E3%83%8F%E3%82%A4%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9Web%E3%82%B5%E3%82%A4%E3%83%88-%E2%80%95%E3%82%A6%E3%82%A7%E3%83%96%E9%AB%98%E9%80%9F%E5%8C%96%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9-Steve-Souders/dp/4873114462%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873114462&#34; target=&#34;_blank&#34;&gt;続・ハイパフォーマンスWebサイト ―ウェブ高速化のベストプラクティス&lt;/a&gt;&lt;img style=&#34;border: none;&#34; src=&#34;http://www.assoc-amazon.jp/e/ir?t=warikiru-22&amp;amp;l=ur2&amp;amp;o=9&#34; alt=&#34;&#34; width=&#34;1&#34; height=&#34;1&#34; /&gt;
武舎 広幸&lt;/p&gt;

&lt;p&gt;オライリージャパン  2010-04-10
売り上げランキング : 33600
おすすめ平均  &lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-3-0.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E7%B6%9A%E3%83%BB%E3%83%8F%E3%82%A4%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9Web%E3%82%B5%E3%82%A4%E3%83%88-%E2%80%95%E3%82%A6%E3%82%A7%E3%83%96%E9%AB%98%E9%80%9F%E5%8C%96%E3%81%AE%E3%83%99%E3%82%B9%E3%83%88%E3%83%97%E3%83%A9%E3%82%AF%E3%83%86%E3%82%A3%E3%82%B9-Steve-Souders/dp/4873114462%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873114462&#34; target=&#34;_blank&#34;&gt;Amazonで詳しく見る&lt;/a&gt; by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google AnalyticsでSafariのバージョンを確認するフィルタ</title>
      <link>http://localhost:1313/mol/log/safari-version-number-filter/</link>
      <pubDate>Thu, 04 Mar 2010 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/safari-version-number-filter/</guid>
      <description>&lt;p&gt;Safariのシェア並びにバージョン別のシェアが知りたくて、Google Analyticsで確認してみたらびっくり、バージョンじゃなくてビルド番号なんだね、こやつは。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; src=&#34;http://farm3.static.flickr.com/2796/4405868994_e57b873d18.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #808080;&#34;&gt;&lt;em&gt;ユーザー &amp;gt; PC環境 &amp;gt; ブラウザ &amp;gt; Safari&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;こんなんわかんないよヽ(`Д´ﾒ)ﾉ ﾌﾟﾝｽｶ！ってことで、これをなんとかフィルタで書き換えたい欲望に駆られました。&lt;a href=&#34;http://ja.wikipedia.org/wiki/Safari#.E3.83.90.E3.83.BC.E3.82.B8.E3.83.A7.E3.83.B3.E5.B1.A5.E6.AD.B4&#34;&gt;Wikipedia&lt;/a&gt;で確認してみると、どうやら&lt;strong&gt;410番台が2.x系&lt;/strong&gt;、&lt;strong&gt;520番台が3.x系&lt;/strong&gt;、&lt;strong&gt;530番台が4.x系&lt;/strong&gt;だと分かる。1.x系はちょっとごちゃごちゃしているのと、シェアも少ないだろうということでスルーの方向で。&lt;/p&gt;

&lt;p&gt;で、書いてみたフィルタがこれ。&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; src=&#34;http://farm5.static.flickr.com/4023/4405869024_13a7018cd4.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #888888;&#34;&gt;&lt;em&gt;Analytics 設定 &amp;gt; プロファイル設定 &amp;gt; 新しいフィルタを作成&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt; &lt;/em&gt;
&lt;pre&gt;&lt;span style=&#34;color: #888888;&#34;&gt;// 4.x系&lt;/span&gt;
^53(.)+&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #888888;&#34;&gt;// 3.x系&lt;/span&gt;
^52(.)+&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;color: #888888;&#34;&gt;// 2.x系&lt;/span&gt;
^41(.)+&lt;/pre&gt;
&lt;em&gt;検索する文字列 &lt;/em&gt;をバージョンごとに上記のように変更して、フィルタを作らなきゃいけないのがめんどくさい。適用してみたこれ↓&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; src=&#34;http://farm5.static.flickr.com/4020/4405869032_5140a6de05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;数日後、適用されたプロファイルがこれ↓（3分間クッキングみたい）&lt;/p&gt;

&lt;p&gt;&lt;img class=&#34;fig&#34; src=&#34;http://farm3.static.flickr.com/2770/4405103923_6a6c708701.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;だいたいのシェアが確認できます。僕のやりたかったこれ！一応満足。
&lt;h3&gt;反省点&lt;/h3&gt;
まぁ、&lt;em&gt;アドバンスフィルタ&lt;/em&gt; の &lt;em&gt;次の文字を含む で&lt;/em&gt;上記の正規表現を入力したら、バージョン毎のセッション数が出るので、出た数値をExcelで円グラフにすれば早いですｗ&lt;/p&gt;

&lt;p&gt;フィルタで加工してしまえば、もう元のデータに戻せないので汎用性を考えるとあまりおススメしません。今回僕はフィルタの勉強のためにしたのが大きいです。Safari 5なんてものが出たらまたフィルタかけないといけませんしね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://code.google.com/intl/ja/apis/analytics/docs/gdata/gdataDeveloperGuide.html&#34;&gt;Google Analytics Data Export API&lt;/a&gt; が使えたら一番スマートですかね。勉強します&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Analyticsの(other)とはなんぞや？</title>
      <link>http://localhost:1313/mol/log/google-analytics-other-entry/</link>
      <pubDate>Fri, 20 Nov 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/google-analytics-other-entry/</guid>
      <description>&lt;p&gt;アクセス解析してたら、どうもデータの取れていないページがある事に気づいた。確かに該当のページは他のページと比べてあまり見られてなさそうなページなので、もしかして、はしょられているの？なんて思いながらGoogle Analyticsのそこらへんの仕様について調べてみた。&lt;br /&gt;&lt;br /&gt;というのも、データが取れていないのなら取れていないでいいんだけど、こっちとしてはなぜ取れていないのか説明できないとアクセス解析ツールを使う他部署の皆さんが不信感を抱いてしまう。｢こんなうさんくさいツール信用できっかよ｣なんて事になったら困りものだ。&lt;br /&gt;&lt;br /&gt;そうゆことで、最初に目をつけたのが&lt;b&gt;トラッキングコードがおかしくないか&lt;/b&gt;。うん、基本ですね。目視でちゃんと正しいトラッキングコードになっていることを確認。てか、テンプレートページに入れてあるので、該当のページだけおかしくなるというのは考えられない。&lt;br /&gt;&lt;br /&gt;続いて、HTTPヘッダーでGIFリクエストされていることも確認。&lt;b&gt;GAサーバーに情報は送られているのは確か&lt;/b&gt;なようだ。&lt;br /&gt;&lt;br /&gt;つまり、情報が送られて表示するまでの間が問題かと思い、次にフィルタに着目。フィルタはほんとうに怖いね。試しに何にもフィルタをかけていないプロファイルを新しく作成し、該当のページにアクセスしてみた。一日後、うん記録されてないね。&lt;b&gt;フィルタが原因ではなかった&lt;/b&gt;。&lt;br /&gt;&lt;br /&gt;困った。だいぶ困った。そしたらこんなヘルプ記事見つけた。&lt;br /&gt;&lt;br /&gt;&lt;blockquote&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;&lt;span style=&#34;font-weight: bold;&#34;&gt;一日で50,000ページ（または仮想ページ）以上をトラッキングしていませんか？&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;&lt;br /&gt;Google AnalyticsはWebサイトの全ての情報を収集し、一日つき50,000ページまでページビューで分類されたレポートを表示します。残りのページはレポート上では (other) という名前のエントリに集約されます。トラフィックの少ないページの詳細なレポートを見るためには、トラフィックの多いページを除くフィルタをかけた新しいプロファイルを作成する必要があります。こうすることで、効果的に残ったページを50,000URLs内に含めておけます。&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div style=&#34;text-align: right;&#34;&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;&lt;a href=&#34;http://code.google.com/intl/en/apis/analytics/docs/tracking/gaTrackingTroubleshooting.html&#34;&gt;Troubleshooting the Tracking Code - Google Analytics - Google Code&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;br /&gt;そんなん知らないよ〜＞＜&lt;br /&gt;試しに1日分のデータ見たら確かに49,999ページ分しかなかった。&lt;br /&gt;&lt;br /&gt;&lt;img alt=&#34;&#34; class=&#34;fig&#34; src=&#34;http://lh4.ggpht.com/_1drnogi3vdg/SwaejT6swYI/AAAAAAAAAsk/jFQRXDaLHlI/other.png&#34; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-weight: bold;&#34;&gt;(other)&lt;/span&gt;は前々から気になってたけど、こんなところで理解するとは思わなかった。つまり、今回の現象はPV数が少ないページが記録される前に、他のPVの多いページが50,000ページ記録されて、それ以降は&lt;span style=&#34;font-weight: bold;&#34;&gt;(other)&lt;/span&gt;にまとめられちゃったから、｢上位のコンテンツ｣から該当のURLで検索してもひっかからなかったってことね。&lt;br /&gt;&lt;br /&gt;ということは、50,000ページ記録される前に該当のページにアクセスすれば記録されるんじゃねと思ったので、日付が変わる12時過ぎにアクセスしたけど、記録されなかった。たぶん、50,000ページのリセットのタイミングが日付と違うのか、それともPV数の多いページから優先的に処理されるのかもね。&lt;br /&gt;&lt;br /&gt;ともかく、PV数の少ないページのレポートを見るためにフィルタで細分化されたプロファイルから確認しないといけないって他部署の人には説明すれば良いと言うわけだ、てかその前にそんなトラフィックあるんなら有償ツール使えってことですね。。。はい、SiteCatalyst使いたいです＞＜&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;関連リソース&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/kahze/20090318/1237350495&#34;&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;PV制限なしでGoogle Analyticsを使っているのに&amp;rdquo;(other)&amp;ldquo;が出てくる件 - ジブログ2&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Analyticsの『サイト上のデータ表示』は信頼できるのか？</title>
      <link>http://localhost:1313/mol/log/google-analytics-site-overlay/</link>
      <pubDate>Thu, 30 Jul 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/google-analytics-site-overlay/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;aligncenter&#34; src=&#34;http://lh4.ggpht.com/_1drnogi3vdg/SnFOnMi2ijI/AAAAAAAAAeQ/d0yu8Sumky0/ga.png&#34; alt=&#34;Site Overlay Report&#34; width=&#34;520&#34; height=&#34;232&#34; /&gt;
&lt;img class=&#34;alignleft&#34; style=&#34;margin: 12px;&#34; src=&#34;http://lh5.ggpht.com/_1drnogi3vdg/SnAE1vt6DHI/AAAAAAAAAdo/H4H_ix2eryA/ga2.png&#34; alt=&#34;&#34; width=&#34;180&#34; /&gt;
ちょっと調べてみた。&lt;/p&gt;

&lt;p&gt;『サイト上のデータ表示』とは『コンテンツ』ナビゲーションの下にある機能で、ページにあるリンクのクリック率がわかるというものです。小難しい数字の羅列のレポートとは違って、どこが押されているのか直感的に分かる素晴らしい機能ですが、個人的には毎回ちょっと違和感を覚える結果だったので何となく信用していませんでした。&lt;/p&gt;

&lt;p&gt;先日、会社の方でこの機能を見たらクリック率がすべて0%になっている、ありえない状態を発見したので、この『サイト上のデータ表示』はどのような仕組みで動いてるのか気になったので調べてみました。
&lt;h3&gt;なぜクリック率がすべて0%になっていたのか？&lt;/h3&gt;
&lt;blockquote&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;URL の書き換え&lt;/span&gt;
フィルタを使用して URL を書き換ると、実際の HTML に記述されたリンクの URL とコンテンツ サマリー レポートの [ナビゲーション サマリー] に表示されるフィルタで書き換えられた URL は一致しなくなります。 この場合、サイト上のデータ表示レポートは、HTML のリンクとレポートに記録されたデータを正しく関連付けられなくなります。
&lt;div style=&#34;text-align: right;&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.google.com/support/googleanalytics/bin/answer.py?hlrm=en&amp;amp;answer=66982&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;サイト上のデータ表示が機能しません。- Analyticsヘルプ&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/blockquote&gt;
Analyticsヘルプに見たらあっさり解決しましたｗ&lt;/p&gt;

&lt;p&gt;確かに会社の方では複数のサブドメインをひとつのプロファイルでまとめていたので、ドメインを表示させるアドバンスフィルタ（通常のURL表示はドメイン以下のみを表示する仕様なので）をかけてありました。でもね、これね、もとはと言えば、↓これを見てやったのに。。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.google.com/support/googleanalytics/bin/answer.py?hl=jp&amp;amp;answer=55524&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;サイトのすべてのサブドメインを 1 つのプロファイルでトラッキングする - Analytics ヘルプ&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
別にいらんことしたわけじゃないんですよｗ　言われたとおりやっただけなのに、ほかの機能が使えなくなるのはどうかなと思ってしまいます。まぁ無料だからね。。&lt;/p&gt;

&lt;p&gt;とはいえ、もしフィルタを使ってなかったとしても『サイト上のデータ表示』は少々癖があります。
&lt;h4&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;同一URLリンクはまとめてカウントされる&lt;/span&gt;&lt;/h4&gt;
例えば、同じページ上に『トップページへ戻る』リンクがサイトロゴ画像とテキストリンクであった場合、それらは同じURLなので、まとめてカウントされます。（実際はサイトロゴが6回、テキストリンクが4回クリックされたとしても、GA上ではどちらもクリック数10と表示されます。）
&lt;h4&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-weight: bold;&#34;&gt;（A要素のhref属性で記述された）標準的なリンクしか計測できない&lt;/span&gt;&lt;/h4&gt;
ざっと挙げる限りこれだけ計測できないリンク（というかクリックイベント）がある。
&lt;ul&gt;
    &lt;li&gt;JavaScriptリンク（onclick属性でwindow.openなど）&lt;/li&gt;
    &lt;li&gt;pageTrackerで作成した仮想ページビュー（_trackPageview()など）&lt;/li&gt;
    &lt;li&gt;URLリダイレクト&lt;/li&gt;
    &lt;li&gt;サブドメインのページへのリンク&lt;/li&gt;
    &lt;li&gt;外部サイトへのリンク&lt;/li&gt;
    &lt;li&gt;ダウンロードファイル(PDFに直リンクとか)&lt;/li&gt;
    &lt;li&gt;フレームへのリンク&lt;/li&gt;
    &lt;li&gt;フォームのinputボタン&lt;/li&gt;
    &lt;li&gt;Flashコンテンツ&lt;/li&gt;
    &lt;li&gt;イメージマップ（AREA要素のhref属性なので）&lt;/li&gt;
&lt;/ul&gt;
URLの書き換えの項を見る限り、[ナビゲーション サマリー]のデータを基にしているのかもしれない。だから、A要素のhref属性でも飛び先にga.jsがインクルードされていない外部サイト、ダウンロードファイルなどは計測されないのね。結局、使いどころとしてはあまりやんちゃなことしてない静的ページくらいしか使えないのかもしれない。&lt;/p&gt;

&lt;p&gt;同じような機能で有料のCrazyEggがあるので、オーバーレイで直感的に確認したいという方はそちらの方の使用を薦める。ただ、CrazyEggもCSSの兼ね合いによっては不具合が予想されるのでそこは注意したい。
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://crazyegg.com/help/Viewing_Results/Why_is_my_report_data_misaligned_from_my_actual_site/&#34;&gt;Why is my report data misaligned from my actual site? - Crazy Egg&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://crazyegg.com/help/Viewing_Results/Why_is_my_website_not_displaying_all_the_images_or_CSS/&#34;&gt;Why is my website not displaying all the images or CSS?  - Crazy Egg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;参考サイト&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;http://www.analyticsexperts.com/google-analytics/site-overlay-is-not-working-why-not/&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;Site overlay is not working, why not?&lt;/span&gt;&lt;/a&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;
&lt;/span&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;http://blog.vkistudios.com/index.cfm/2008/12/12/Google-Analytics-Power-User-Part-2--Site-Overlay-Report&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;Site Overlay Report: Google Analytics Power User Part 2 - VKI Studios Blog&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>複数のGoogle Analytics Tracker Codeを併用する</title>
      <link>http://localhost:1313/mol/log/multi-google-analytics-tracker-code/</link>
      <pubDate>Mon, 22 Jun 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/multi-google-analytics-tracker-code/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.suzukikenichi.com/blog/tracking-access-by-mutiple-google-analytics-accounts/&#34;&gt;Google Analyticsを複数のプロファイルでトラッキング | 海外SEO情報ブログ・メルマガ&lt;/a&gt;でGAのカスタマイズってほどでもないけど、トラッキングコードのTipsが紹介されている。要は_gat._getTracker()で初期化する際に、変数を2つ用意してあげればいいってことだね。&lt;br /&gt;&lt;br /&gt;ちょうど&lt;a href=&#34;http://www.sigma-dp.com/DP2/&#34;&gt;SIGMA DP2 : Special Contents&lt;/a&gt;で似たようなコード見つけたので、挙げておく。&lt;br /&gt;&lt;pre&gt;&amp;lt;script type=&amp;ldquo;text/javascript&amp;rdquo;&amp;gt;&lt;br /&gt;try {&lt;br /&gt;&lt;br /&gt;var &lt;span style=&#34;color: #6600cc;&#34;&gt;pageTracker&lt;/span&gt; = _gat._getTracker(&amp;ldquo;UA-xxxxxx-1&amp;rdquo;);&lt;br /&gt;pageTracker._trackPageview();&lt;br /&gt;&lt;br /&gt;var &lt;span style=&#34;color: #6600cc;&#34;&gt;pageTracker2&lt;/span&gt; = _gat._getTracker(&amp;ldquo;UA-yyyyy-4&amp;rdquo;);&lt;br /&gt;pageTracker2._trackPageview();&lt;br /&gt;&lt;br /&gt;} catch(err) {}&lt;br /&gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;pageTrackerとpageTracker2に格納してるんすね。違うアカウントで同じプロファイルを共有したい時ってゆう状態が、よくわからないんだけども。クライアントさんと制作者側が両方アクセス解析の情報を知りたいって時には便利なのかもしれないね。たぶん。&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.vkistudios.com/&#34;&gt;Analytics Consulting, Conversion Rate Optimization and Internet Marketing Vancouver BC&lt;/a&gt;てところは、こんな感じだった。&lt;br /&gt;&lt;pre&gt;&amp;lt;script type=&amp;ldquo;text/javascript&amp;rdquo;&amp;gt;&lt;br /&gt;try {&lt;br /&gt;var &lt;span style=&#34;color: #330099;&#34;&gt;pageTracker&lt;/span&gt; = _gat._getTracker(&amp;ldquo;UA-5036481-1&amp;rdquo;);&lt;br /&gt;var isDev = window.location.href.search(/vkistudios.net/);&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #6600cc;&#34;&gt;if (isDev &amp;gt; -1)&lt;/span&gt;&lt;br /&gt;pageTracker._setDomainName(&amp;ldquo;.vkistudios.net&amp;rdquo;);&lt;br /&gt;&lt;span style=&#34;color: #6600cc;&#34;&gt;else&lt;/span&gt;&lt;br /&gt;pageTracker._setDomainName(&amp;ldquo;.vkistudios.com&amp;rdquo;);&lt;br /&gt;&lt;br /&gt;pageTracker._setLocalRemoteServerMode();&lt;br /&gt;pageTracker._initData();&lt;br /&gt;pageTracker._trackPageview();&lt;br /&gt;} catch (e) {}&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #666666;&#34;&gt;//event tracking profile&lt;/span&gt;&lt;br /&gt;try {&lt;br /&gt;var &lt;span style=&#34;color: #6600cc;&#34;&gt;eventTracker&lt;/span&gt; = _gat._getTracker(&amp;ldquo;UA-5036481-4&amp;rdquo;);&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;color: #6600cc;&#34;&gt;if (isDev &amp;gt; -1)&lt;/span&gt;&lt;br /&gt;eventTracker._setDomainName(&amp;ldquo;.vkistudios.net&amp;rdquo;);&lt;br /&gt;&lt;span style=&#34;color: #6600cc;&#34;&gt;else&lt;/span&gt;&lt;br /&gt;eventTracker._setDomainName(&amp;ldquo;.vkistudios.com&amp;rdquo;);&lt;br /&gt;eventTracker._initData();&lt;br /&gt;eventTracker._trackPageview();&lt;br /&gt;} catch (e) {}&lt;br /&gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;イベントトラッキングとコンテンツの情報は分けて管理してるのかな。URLを判別して、_setDomainName()の引数を変えることでマルチドメイントラッキングを可能にしてる。&lt;br /&gt;&lt;br /&gt;こんなふうにいろんなサイトのカスタマイズしたコード見てみたいもんです。&lt;br /&gt;eコマーストランザクションとかどこか使ってないもんかな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Webアナリスト養成講座 アビナッシュ・コーシック, 衣袋 宏美</title>
      <link>http://localhost:1313/mol/log/web-analytics-an-hour-a-day/</link>
      <pubDate>Sun, 21 Jun 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/web-analytics-an-hour-a-day/</guid>
      <description>&lt;p&gt;&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4798117897/warikiru-22/ref=nosim/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://ecx.images-amazon.com/images/I/41yHjUT2INL._SL160_.jpg&#34; alt=&#34;Webアナリスト養成講座 (CD-ROM付)&#34; border=&#34;0&#34; /&gt;&lt;/a&gt;&lt;/td&gt;&lt;td valign=&#34;top&#34;&gt;&lt;span style=&#34;font-size:-1;&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/Web%E3%82%A2%E3%83%8A%E3%83%AA%E3%82%B9%E3%83%88%E9%A4%8A%E6%88%90%E8%AC%9B%E5%BA%A7-CD-ROM%E4%BB%98-%E3%82%A2%E3%83%93%E3%83%8A%E3%83%83%E3%82%B7%E3%83%A5%E3%83%BB%E3%82%B3%E3%83%BC%E3%82%B7%E3%83%83%E3%82%AF/dp/4798117897%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4798117897&#34; target=&#34;_blank&#34;&gt;Webアナリスト養成講座 (CD-ROM付)&lt;/a&gt;&lt;img src=&#34;http://www.assoc-amazon.jp/e/ir?t=warikiru-22&amp;amp;l=ur2&amp;amp;o=9&#34; alt=&#34;&#34; border=&#34;0&#34; height=&#34;1&#34; width=&#34;1&#34; /&gt;&lt;br /&gt;衣袋 宏美&lt;br /&gt;&lt;br /&gt;翔泳社  2009-07-07&lt;br /&gt;売り上げランキング : 2011&lt;br /&gt;おすすめ平均  &lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-5-0.gif&#34; /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://www.amazon.co.jp/Web%E3%82%A2%E3%83%8A%E3%83%AA%E3%82%B9%E3%83%88%E9%A4%8A%E6%88%90%E8%AC%9B%E5%BA%A7-CD-ROM%E4%BB%98-%E3%82%A2%E3%83%93%E3%83%8A%E3%83%83%E3%82%B7%E3%83%A5%E3%83%BB%E3%82%B3%E3%83%BC%E3%82%B7%E3%83%83%E3%82%AF/dp/4798117897%3FSubscriptionId%3D15SMZCTB9V8NGR2TW082%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4798117897&#34; target=&#34;_blank&#34;&gt;Amazonで詳しく見る&lt;/a&gt;&lt;/span&gt; &lt;span style=&#34;font-size:-2;&#34;&gt;by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;br /&gt;GoogleのAnalytics Evangelistである&lt;a href=&#34;http://www.kaushik.net/avinash/&#34;&gt;Avinash Kaushik&lt;/a&gt;が書いた&lt;a href=&#34;http://www.amazon.co.jp/gp/product/0470130652?ie=UTF8&amp;amp;tag=warikiru-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=0470130652&#34;&gt;Web Analytics: An Hour a Day&lt;/a&gt;がついに翻訳された。&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://ibukuro.blogspot.com/2009/06/webweb-analytics-hour-day.html&#34;&gt;Insight for WebAnalytics: Webアナリスト養成講座（Web Analytics An Hour A Dayの翻訳）が来月上旬に出ます&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;監修をされたのが&lt;a href=&#34;http://a2i.jp/&#34;&gt;アクセス解析イニシアチブ&lt;/a&gt;副代表の衣袋宏美さんということで、これは間違いないでしょ！！アクセス解析のマストバイブルです。&lt;br /&gt;&lt;br /&gt;光の速さで予約した！ 7/7発売だよ！&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://twitter.com/avinashkaushik&#34;&gt;Avinash Kaushik (avinashkaushik) on Twitter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://twitter.com/hibukuro&#34;&gt;衣袋 宏美 (hibukuro) on Twitter&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cookieいろいろ〜！</title>
      <link>http://localhost:1313/mol/log/analytics-cookie/</link>
      <pubDate>Thu, 11 Jun 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/analytics-cookie/</guid>
      <description>&lt;p&gt;Cookieが嫌いです。カントリーマアムは好きですが。。。
などと言っておられなくなってきたので、本腰入れて調べてみた。
Google Analyticsを理解するには避けられない道なのだよ(´・ω・｀)&lt;/p&gt;

&lt;p&gt;まずは、基本的な意味から
&lt;blockquote&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;Cookieとは、Webサイトの提供者が、Webブラウザを通じて訪問者のコンピュータに一時的にデータを書き込んで保存させるしくみ。
Cookieにはユーザに関する情報や最後にサイトを訪れた日時、サイトの訪問回数など記録しておくことができる。Cookieはユーザの識別に使われ認証システムやWWWによるサービスをユーザごとにカスタマイズするパーソナライズシステムの要素技術として利用される。
1つのCookieには4096バイトのデータを記録でき、最大で300のCookieを保存できる。1台のサーバが同じコンピュータに対して発行できる Cookieの数は20個に制限されている。Cookieにはそれぞれ有効期限を設定することができ、有効期限を過ぎたCookieは消滅する。&lt;/span&gt;
&lt;div style=&#34;text-align: right;&#34;&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;&lt;a href=&#34;http://e-words.jp/w/Cookie.html&#34;&gt;Cookieとは 【クッキー】 - 意味/解説/説明/定義 ： IT用語辞典&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;a href=&#34;http://www.amazon.co.jp/gp/product/4873113024?ie=UTF8&amp;amp;tag=warikiru-22&amp;amp;linkCode=as2&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=4873113024&#34;&gt;Web解析Hacks&lt;/a&gt;より、もうすこしアクセス解析よりな視点からの説明
&lt;blockquote&gt;&lt;span style=&#34;font-weight: bold; color: #000000; font-size: 100%;&#34;&gt;セッション Cookie&lt;/span&gt;
セッション Cookieは訪問者がサイトにいる間だけ有効で、ユーザがWebブラウザを閉じたり。ある一定時間（通常は30分間）何もしなかったりすると、削除される。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-weight: bold; color: #000000; font-size: 100%;&#34;&gt;永続 Cookie&lt;/span&gt;
永続 Cookieは１回の訪問を超えて存在し続け、将来のある時間に有効期限がくる。設定方法によってファーストパーティとサードパーティの２つに分類できる。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-weight: bold; color: #000000; font-size: 85%;&#34;&gt;ファーストパーティ Cookie&lt;/span&gt;
企業自身が所有するWebサーバーやドメインから発行されたCookie。例えば、eBayが独自のトラッキングCookieをebay.comから設定している場合、これらのCookieは『ファーストパーティ』である。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-weight: bold; color: #000000; font-size: 85%;&#34;&gt;サードパーティ Cookie&lt;/span&gt;
アクセスしたWebサイト以外のドメインから発行されたすべてのCookie。例えば、DisneyがWebSideStoryのトラッキングドメイン（www.disney.comのWebサイト上のehg-disney.htbox.com）を使っていた場合、WebSideStoryの Cookieはサードパーティ Cookieである。&lt;/blockquote&gt;
セキュリティと精度の点から言ってファーストパーティ Cookieの仕様が望ましいのだ。
ちなみに、&lt;a href=&#34;http://www.google.com/support/analytics/bin/answer.py?hl=jp&amp;amp;answer=55614&#34;&gt;Google Analyticsはファーストパーティ Cookie&lt;/a&gt;を使用している。&lt;/p&gt;

&lt;p&gt;あと、&lt;a href=&#34;http://code.google.com/intl/en/apis/analytics/docs/concepts/gaConceptsCookies.html#cookiesSet&#34;&gt;Cookies Set By Google Analytics&lt;/a&gt;ってところにGoogle Analyticsで使われているCookieの説明があったので訳してみた。逆に意味わかんなくってるけどごめん。
&lt;h3&gt;&lt;strong&gt;utma&lt;/h3&gt;
このクッキーは通常、初めてあなたのサイトを訪れるユーザーのブラウザにセットされる。もし、ブラウザ操作によってクッキーを削除したのなら、そしてそれ以降にサイトを訪れたとしたら、新しくて異なるユニークIDをもつ&lt;/strong&gt;utmaクッキーがセットされる。このクッキーはユニークユーザーを決めるのに使用され各ページを見るごとにアップデートされる。また、このクッキーはGoogle Analyticsが使用するユニークIDを持つことで正当性とクッキーへの安全なアクセス性を保証する。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セット、上書きされてから2年&lt;/span&gt;
&lt;h3&gt;__utmb&lt;/h3&gt;
このクッキーはあなたのサイトでのユーザーセッションを確認するために使用される。ユーザーがページを見たときに、Google Analyticsコードはこのクッキーをアップデートしようとする。もしこのクッキーが見つからない場合は、新しくセットされ新たなセッションとしてカウントされる。あなたが違うページを見るごとに30分の有効期限のクッキーが上書きされる、つまり30分以内の間隔でユーザーが活動する限り、１つのセッションが続くということです。このクッキーは30分以上ページでなにも活動しなかった場合、期限が切れてしまいます。あなたは _setSessionTimeout()メソッドを使用することでデフォルトのセッション時間を変更することができます。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セット、上書きされてから30分&lt;/span&gt;
&lt;h3&gt;&lt;strong&gt;utmc&lt;/h3&gt;
このクッキーは&lt;/strong&gt;utmbクッキーと共同して新しいユーザーセッションかどうか決める。特に有効期限はないがブラウザが終了したときが期限になる。ユーザーはブラウザを終了させて30分以内にまたサイトを訪れることもあるだろう。このときに&lt;strong&gt;utmcがないことは&lt;/strong&gt;utmbクッキーの有効期限内であるけれども新しいセッションであることを物語っている。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セットされていない&lt;/span&gt;
&lt;h3&gt;__utmz&lt;/h3&gt;
このクッキーはユーザーがあなたのサイトを訪れた時に、それがノーリファラーなのか、参照サイト経由なのか、検索で来たのか、それとも広告やEmailなどのキャンペーンなのかなどの情報を記録する。そして検索エンジントラフィックや、広告キャンペーン、ページ遷移の計算に使われる。またこのクッキーの有効期限は各ページを見るごとにアップデートされる。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セット、上書きされてから6ヶ月&lt;/span&gt;
&lt;h3&gt;&lt;strong&gt;utmv&lt;/h3&gt;
このクッキーは通常のトラッキングコード設定では存在しない。&lt;/strong&gt;utmvクッキーはあなたが独自設定した_setVar()メソッドを使うことで表示される。このクッキー情報はutmccパラメーター経由のGIFリクエストURLでAnalyticsサーバーに受け渡される。このクッキーは _setVar()メソッドが追加されたページをロードすることでしか上書きされない。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セット、上書きされてから2年&lt;/span&gt;
&lt;h3&gt;__utmx&lt;/h3&gt;
このクッキーはWebsite Optimizerに使用され、正確に設定されたWebsite Optimizerトラッキングコードが挿入されたをページをロードしたときしかセットされない。Optimizeコードが実行するとき、訪問者の種類を表すこのクッキーは各実験に割り当てられるので、訪問者はあなたのサイトで一貫した体験をする。詳しくは&lt;a href=&#34;http://www.google.com/support/websiteoptimizer/&#34;&gt;Website Optimizer Help Center&lt;/a&gt;を見てね。&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;有効期限：セット、上書きされてから2年&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;これで何となく、アクセス解析でのCookieの役割が分かったような（´・ω・｀）
&lt;table border=&#34;0&#34; cellpadding=&#34;5&#34;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td valign=&#34;top&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/exec/obidos/ASIN/4873113024/warikiru-22/ref=nosim/&#34; target=&#34;_blank&#34;&gt;&lt;img class=&#34;fig&#34; style=&#34;border: 0pt none;&#34; src=&#34;http://ecx.images-amazon.com/images/I/41ZCARQCYDL._SL160_.jpg&#34; border=&#34;0&#34; alt=&#34;Web解析Hacks ―オンラインビジネスで最大の効果をあげるテクニック &amp;amp; ツール&#34; width=&#34;111&#34; height=&#34;160&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;font-weight: bold;&#34; valign=&#34;top&#34;&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;&lt;a href=&#34;http://www.amazon.co.jp/Web%E8%A7%A3%E6%9E%90Hacks-%E2%80%95%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E3%81%A7%E6%9C%80%E5%A4%A7%E3%81%AE%E5%8A%B9%E6%9E%9C%E3%82%92%E3%81%82%E3%81%92%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF-%E3%83%84%E3%83%BC%E3%83%AB-Eric-Peterson/dp/4873113024%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873113024&#34; target=&#34;_blank&#34;&gt;Web解析Hacks &lt;/a&gt;
&lt;a href=&#34;http://www.amazon.co.jp/Web%E8%A7%A3%E6%9E%90Hacks-%E2%80%95%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E3%81%A7%E6%9C%80%E5%A4%A7%E3%81%AE%E5%8A%B9%E6%9E%9C%E3%82%92%E3%81%82%E3%81%92%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF-%E3%83%84%E3%83%BC%E3%83%AB-Eric-Peterson/dp/4873113024%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873113024&#34; target=&#34;_blank&#34;&gt;―オンラインビジネスで最大の効果をあげるテクニック &amp;amp; ツール&lt;/a&gt;&lt;img src=&#34;http://www.blogger.com/%27http://www.assoc-amazon.jp/e/ir?t=&#34; border=&#34;0&#34; alt=&#34;&#39;&#39;&#34; width=&#34;1&#34; height=&#34;1&#34; /&gt;
株式会社デジタルフォレスト 木下 哲也 有限会社 福龍興業&lt;/p&gt;

&lt;p&gt;オライリー・ジャパン  2006-11-08
売り上げランキング : 68060
おすすめ平均  &lt;img src=&#34;http://g-images.amazon.com/images/G/01/detail/stars-4-5.gif&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/Web%E8%A7%A3%E6%9E%90Hacks-%E2%80%95%E3%82%AA%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E3%83%93%E3%82%B8%E3%83%8D%E3%82%B9%E3%81%A7%E6%9C%80%E5%A4%A7%E3%81%AE%E5%8A%B9%E6%9E%9C%E3%82%92%E3%81%82%E3%81%92%E3%82%8B%E3%83%86%E3%82%AF%E3%83%8B%E3%83%83%E3%82%AF-%E3%83%84%E3%83%BC%E3%83%AB-Eric-Peterson/dp/4873113024%3FSubscriptionId%3D0G91FPYVW6ZGWBH4Y9G2%26tag%3Dwarikiru-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873113024&#34; target=&#34;_blank&#34;&gt;Amazonで詳しく見る&lt;/a&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt; &lt;/span&gt;&lt;span style=&#34;font-size: 85%;&#34;&gt;by &lt;a href=&#34;http://www.goodpic.com/mt/aws/index.html&#34;&gt;G-Tools&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;/span&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pageTracker._initData();もいらない？</title>
      <link>http://localhost:1313/mol/log/pagetracker-initdata/</link>
      <pubDate>Fri, 29 May 2009 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/mol/log/pagetracker-initdata/</guid>
      <description>&lt;p&gt;数ヶ月前の記事（&lt;a href=&#34;http://warikiru.blogspot.com/2009/01/update-google-analytics-code.html&#34;&gt;Google Analytics コードアップデート&lt;/a&gt;）でGAのコードにtry {} catch(err) {}文が挿入されたってことを書いた。でも、よくよく見たら&lt;span style=&#34;font-weight: bold;&#34;&gt;pageTracker._initData();&lt;/span&gt;の関数もなくなっていない？ってことに気づいた！&lt;/p&gt;

&lt;p&gt;[javascript]
var pageTracker = _gat._getTracker(&amp;ldquo;UA-xxxxxxx-x&amp;rdquo;);
pageTracker._initData();
pageTracker._trackPageview();
[/javascript]&lt;/p&gt;

&lt;p&gt;少し前のga.jsのコードはこんな感じだったともう。&lt;/p&gt;

&lt;p&gt;[javascript]
try{
var pageTracker = _gat._getTracker(&amp;ldquo;UA-xxxxxxx-x&amp;rdquo;);
pageTracker._trackPageview();
} catch(err) { }
[/javascript]&lt;/p&gt;

&lt;p&gt;今はこんな感じ。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;initData()ってゆうくらいだから初期化する関数なのかと思い&lt;a href=&#34;http://www.google.com/support/googleanalytics/bin/answer.py?hl=jp&amp;amp;answer=76305#init&#34;&gt;Google Analytics トラッキング コード移行ガイド&lt;/a&gt;で初期化部分探したけど、載ってない。。。
んで、悔しいから&amp;lt;a href=&amp;ldquo;&lt;a href=&#34;http://code.google.com/intl/ja/apis/analytics/docs/gaJS/gaJSApi.html#_gat.GA_Tracker&#34;&gt;http://code.google.com/intl/ja/apis/analytics/docs/gaJS/gaJSApi.html#_gat.GA_Tracker&lt;/a&gt;&lt;/em&gt;._initData&amp;rdquo;&amp;gt;Google Analytics Tracking API&lt;/a&gt;探したら書いてあった！
&lt;blockquote&gt;&lt;strong&gt;&lt;span style=&#34;font-size: small;&#34;&gt;_initData()&lt;/span&gt;&lt;/strong&gt;&lt;span style=&#34;font-size: small;&#34;&gt;
_initData()&lt;/span&gt;&lt;span style=&#34;font-weight: bold;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Deprecated&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;font-size: small;&#34;&gt;. initData() now executes automatically in the ga.js tracking code.
&lt;/span&gt;&lt;span style=&#34;color: #999999;&#34;&gt;&lt;span style=&#34;font-size: small;&#34;&gt;Initializes or re-initializes the GATC (Google Analytics Tracker Code) object.&lt;/span&gt;&lt;/span&gt;
[javascript]
var pageTracker = _gat._getTracker(&amp;ldquo;UA-12345-1&amp;rdquo;);
pageTracker._initData();
pageTracker._trackPageview();
[/javascript]
&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;Deprecatedってことは廃止予定ってことか。なんかga.js内で自動的に実行しているらしい。
あーすっきり！しかしまぁ、もうちょっとアナウンスしてくれてもいいんだと思うんだけどな。。。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>